/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:00:02 GMT 2019
 */

package org.apache.commons.math4.ml.neuralnet.sofm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunction;
import org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class LearningFactorFunctionFactory_ESTest extends LearningFactorFunctionFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.quasiSigmoidDecay(1350.183746, 0.0, 1L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 1,350.184 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.quasiSigmoidDecay(0.0, 0.0, 1L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 0 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.exponentialDecay((-1.0), 0.0, (-1L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -1 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.exponentialDecay(0.0, 0.0, 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 0 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LearningFactorFunction learningFactorFunction0 = LearningFactorFunctionFactory.quasiSigmoidDecay(0.12908332267053294, (-2060.0715), 2183L);
      assertNotNull(learningFactorFunction0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LearningFactorFunction learningFactorFunction0 = LearningFactorFunctionFactory.exponentialDecay(Double.NaN, Double.POSITIVE_INFINITY, 1L);
      assertNotNull(learningFactorFunction0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.quasiSigmoidDecay(1.0, (-2044.5100281100179), 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.exponentialDecay(0.02500475021152375, 0.0, 1L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.util.ExponentialDecayFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.quasiSigmoidDecay((-0.8637046540481839), (-0.8637046540481839), (-3171L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -0.864 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.exponentialDecay(326.5605470749704, 326.5605470749704, (-3141L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 326.561 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        LearningFactorFunctionFactory.exponentialDecay(1.0, 1.0, 24L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 1 is larger than, or equal to, the maximum (1)
         //
         verifyException("org.apache.commons.math4.ml.neuralnet.sofm.util.ExponentialDecayFunction", e);
      }
  }
}
