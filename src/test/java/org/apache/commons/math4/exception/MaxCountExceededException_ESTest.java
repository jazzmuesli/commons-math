/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:34:15 GMT 2019
 */

package org.apache.commons.math4.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math4.exception.MaxCountExceededException;
import org.apache.commons.math4.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MaxCountExceededException_ESTest extends MaxCountExceededException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Double double0 = new Double((-2696.304137493));
      MaxCountExceededException maxCountExceededException0 = new MaxCountExceededException(double0);
      Number number0 = maxCountExceededException0.getMax();
      assertEquals((-2696.304137493), number0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Short short0 = new Short((short)2735);
      MaxCountExceededException maxCountExceededException0 = new MaxCountExceededException(short0);
      Number number0 = maxCountExceededException0.getMax();
      assertEquals((short)2735, number0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MaxCountExceededException maxCountExceededException0 = new MaxCountExceededException((Number) null);
      Number number0 = maxCountExceededException0.getMax();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.REAL_FORMAT;
      Integer integer0 = new Integer(0);
      Object[] objectArray0 = new Object[0];
      MaxCountExceededException maxCountExceededException0 = new MaxCountExceededException(localizedFormats0, integer0, objectArray0);
      Number number0 = maxCountExceededException0.getMax();
      assertEquals(0, number0);
  }
}
