/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:27:27 GMT 2019
 */

package org.apache.commons.math4.exception.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.math4.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocalizedFormats_ESTest extends LocalizedFormats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.CANNOT_COMPUTE_BETA_DENSITY_AT_0_FOR_SOME_ALPHA;
      Locale locale0 = Locale.ROOT;
      Locale.setDefault(locale0);
      String string0 = localizedFormats0.getLocalizedString(locale0);
      assertEquals("cannot compute beta density at 0 when alpha = {0,number}", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocalizedFormats[] localizedFormatsArray0 = LocalizedFormats.values();
      assertEquals(328, localizedFormatsArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.valueOf("POPULATION_LIMIT_NOT_POSITIVE");
      assertEquals(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, localizedFormats0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR;
      // Undeclared exception!
      try { 
        localizedFormats0.getLocalizedString((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NON_POSITIVE_DEFINITE_MATRIX;
      Locale locale0 = Locale.FRANCE;
      String string0 = localizedFormats0.getLocalizedString(locale0);
      assertEquals("matrice non d\u00E9finie positive : l''\u00E9l\u00E9ment diagonal ({1},{1}) est inf\u00E9rieur \u00E0 {2} ({0})", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.INVALID_MAX_ITERATIONS;
      Locale locale0 = Locale.CANADA;
      String string0 = localizedFormats0.getLocalizedString(locale0);
      assertEquals("bad value for maximum iterations number: {0}", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR;
      Locale locale0 = Locale.TAIWAN;
      String string0 = localizedFormats0.getLocalizedString(locale0);
      assertEquals("cannot normalize a zero norm vector", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.INVALID_MAX_ITERATIONS;
      String string0 = localizedFormats0.getSourceString();
      assertEquals("bad value for maximum iterations number: {0}", string0);
  }
}
