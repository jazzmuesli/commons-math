/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:59:10 GMT 2019
 */

package org.apache.commons.math4.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.exception.MathArithmeticException;
import org.apache.commons.math4.exception.util.Localizable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MathArithmeticException_ESTest extends MathArithmeticException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Localizable localizable0 = mock(Localizable.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) objectArray0;
      MathArithmeticException mathArithmeticException0 = null;
      try {
        mathArithmeticException0 = new MathArithmeticException(localizable0, objectArray0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MathArithmeticException mathArithmeticException0 = new MathArithmeticException();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Localizable localizable0 = mock(Localizable.class, new ViolatedAssumptionAnswer());
      MathArithmeticException mathArithmeticException0 = new MathArithmeticException(localizable0, (Object[]) null);
  }
}
