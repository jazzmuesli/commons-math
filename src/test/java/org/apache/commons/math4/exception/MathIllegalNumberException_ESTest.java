/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:34:30 GMT 2019
 */

package org.apache.commons.math4.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math4.exception.MathIllegalNumberException;
import org.apache.commons.math4.exception.util.Localizable;
import org.apache.commons.math4.exception.util.LocalizedFormats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MathIllegalNumberException_ESTest extends MathIllegalNumberException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT;
      MathIllegalNumberException mathIllegalNumberException0 = new MathIllegalNumberException(localizedFormats0, (Number) null, (Object[]) null);
      Number number0 = mathIllegalNumberException0.getArgument();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocalizedFormats localizedFormats0 = LocalizedFormats.NUMBER_OF_SUCCESS_LARGER_THAN_POPULATION_SIZE;
      Float float0 = new Float((-1.0));
      Object[] objectArray0 = new Object[1];
      MathIllegalNumberException mathIllegalNumberException0 = new MathIllegalNumberException(localizedFormats0, float0, objectArray0);
      Number number0 = mathIllegalNumberException0.getArgument();
      assertEquals((-1.0F), number0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Float float0 = new Float(577.2F);
      Object[] objectArray0 = new Object[1];
      MathIllegalNumberException mathIllegalNumberException0 = new MathIllegalNumberException((Localizable) null, float0, objectArray0);
      Number number0 = mathIllegalNumberException0.getArgument();
      assertEquals(577.2F, number0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = MathIllegalNumberException.INTEGER_ZERO;
      MathIllegalNumberException mathIllegalNumberException0 = new MathIllegalNumberException((Localizable) null, integer0, (Object[]) null);
      Number number0 = mathIllegalNumberException0.getArgument();
      assertEquals(0, number0);
  }
}
