/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:51:18 GMT 2019
 */

package org.apache.commons.math4.genetics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.genetics.Chromosome;
import org.apache.commons.math4.genetics.DummyBinaryChromosome;
import org.apache.commons.math4.genetics.DummyListChromosome;
import org.apache.commons.math4.genetics.NPointCrossover;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NPointCrossover_ESTest extends NPointCrossover_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NPointCrossover<DummyListChromosome> nPointCrossover0 = new NPointCrossover<DummyListChromosome>(732);
      Chromosome chromosome0 = mock(Chromosome.class, new ViolatedAssumptionAnswer());
      Chromosome chromosome1 = mock(Chromosome.class, new ViolatedAssumptionAnswer());
      try { 
        nPointCrossover0.crossover(chromosome0, chromosome1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // one-point crossover only works with fixed-length chromosomes
         //
         verifyException("org.apache.commons.math4.genetics.NPointCrossover", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NPointCrossover<DummyBinaryChromosome> nPointCrossover0 = null;
      try {
        nPointCrossover0 = new NPointCrossover<DummyBinaryChromosome>((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -1 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math4.genetics.NPointCrossover", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NPointCrossover<DummyListChromosome> nPointCrossover0 = new NPointCrossover<DummyListChromosome>(273);
      int int0 = nPointCrossover0.getCrossoverPoints();
      assertEquals(273, int0);
  }
}
