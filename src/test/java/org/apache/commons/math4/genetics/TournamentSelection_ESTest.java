/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:36:04 GMT 2019
 */

package org.apache.commons.math4.genetics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.genetics.Population;
import org.apache.commons.math4.genetics.TournamentSelection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TournamentSelection_ESTest extends TournamentSelection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TournamentSelection tournamentSelection0 = new TournamentSelection(0);
      int int0 = tournamentSelection0.getArity();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TournamentSelection tournamentSelection0 = new TournamentSelection(2);
      int int0 = tournamentSelection0.getArity();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TournamentSelection tournamentSelection0 = new TournamentSelection(0);
      Population population0 = mock(Population.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        tournamentSelection0.select(population0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.math4.genetics.Population$MockitoMock$1446366015 cannot be cast to org.apache.commons.math4.genetics.ListPopulation
         //
         verifyException("org.apache.commons.math4.genetics.TournamentSelection", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TournamentSelection tournamentSelection0 = new TournamentSelection((-12));
      tournamentSelection0.setArity((-12));
      assertEquals((-12), tournamentSelection0.getArity());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TournamentSelection tournamentSelection0 = new TournamentSelection((-12));
      int int0 = tournamentSelection0.getArity();
      assertEquals((-12), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TournamentSelection tournamentSelection0 = new TournamentSelection(2582);
      // Undeclared exception!
      try { 
        tournamentSelection0.select((Population) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.genetics.TournamentSelection", e);
      }
  }
}
