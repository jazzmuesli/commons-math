/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:49:29 GMT 2019
 */

package org.apache.commons.math4.analysis.interpolation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PiecewiseBicubicSplineInterpolatingFunction_ESTest extends PiecewiseBicubicSplineInterpolatingFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2086.1679836536555);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, (-1115.129397679686));
      piecewiseBicubicSplineInterpolatingFunction0.value(3368.68441195, 3368.68441195);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint((-2913.2165696934), 433.15581591399);
      try { 
        piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, (-2087.22310475));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -2,087.223 out of [-2,086.168, 3,368.684] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint((-1401.426739), (-766.09863605017));
      piecewiseBicubicSplineInterpolatingFunction0.value((-1401.426739), (-2087.22310475));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(3368.68441195, (-2087.22310475));
      piecewiseBicubicSplineInterpolatingFunction0.value((-2087.22310475), 871.28987092);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value((-1401.426739), 871.28987092);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.value((-58.36137545997263), 0.0);
      piecewiseBicubicSplineInterpolatingFunction0.value(518.861915970508, 275.4768971115);
      piecewiseBicubicSplineInterpolatingFunction0.value(1.0, (-1488.7988428));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint((-2087.22310475), 275.4768971115);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value((-1401.426739), 871.28987092);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.value(518.861915970508, (-2087.22310475));
      piecewiseBicubicSplineInterpolatingFunction0.value((-58.36137545997263), 0.0);
      piecewiseBicubicSplineInterpolatingFunction0.value(518.861915970508, 275.4768971115);
      piecewiseBicubicSplineInterpolatingFunction0.value((-71.630873), 0.0);
      try { 
        piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, 3464.989512);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 3,464.99 out of [-2,087.223, 3,368.684] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      double double0 = 518.861915970508;
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      // Undeclared exception!
      try { 
        piecewiseBicubicSplineInterpolatingFunction0.value((-1401.426739), 871.28987092);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value(1.997844754509471E-9, 5.669184079525E-24);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint((-1401.426739), (-766.09863605017));
      piecewiseBicubicSplineInterpolatingFunction0.value((-1401.426739), (-2087.22310475));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(963.0, (-2087.22310475));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value((-2087.22310475), 1482.904);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2086.1679836536555);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, (-1115.129397679686));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      try { 
        piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, (-2087.22310475));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -2,087.223 out of [-2,086.168, 3,368.684] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value((-1401.426739), 871.28987092);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.value((-58.36137545997263), 0.0);
      piecewiseBicubicSplineInterpolatingFunction0.value(518.861915970508, 275.4768971115);
      piecewiseBicubicSplineInterpolatingFunction0.value(518.861915970508, (-1401.426739));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 2888.2943;
      doubleArray0[1] = (-3299.75273);
      doubleArray0[2] = 720.798946913;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 402.0645034781;
      doubleArray0[5] = 543.2961;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-1055.353309);
      doubleArray0[8] = 2429.1641764;
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 2429.1641764;
      double[][] doubleArray2 = new double[1][6];
      doubleArray2[0] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // insufficient data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-936.275);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-936.275);
      double[][] doubleArray2 = new double[9][9];
      double[] doubleArray3 = new double[0];
      doubleArray2[0] = doubleArray3;
      doubleArray2[1] = doubleArray1;
      doubleArray2[2] = doubleArray1;
      doubleArray2[3] = doubleArray0;
      doubleArray2[4] = doubleArray1;
      doubleArray2[5] = doubleArray1;
      doubleArray2[6] = doubleArray0;
      doubleArray2[7] = doubleArray0;
      doubleArray2[8] = doubleArray1;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-936.275);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-936.275);
      double[][] doubleArray2 = new double[9][9];
      double[] doubleArray3 = new double[0];
      doubleArray2[0] = doubleArray3;
      doubleArray2[1] = doubleArray1;
      doubleArray2[2] = doubleArray1;
      doubleArray2[3] = doubleArray0;
      doubleArray2[4] = doubleArray1;
      doubleArray2[5] = doubleArray1;
      doubleArray2[6] = doubleArray0;
      doubleArray2[8] = doubleArray1;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      double[][] doubleArray1 = new double[5][1];
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = 0.0;
      doubleArray2[6] = (-1415.77451);
      doubleArray2[7] = 0.0;
      doubleArray2[8] = 0.0;
      doubleArray1[0] = doubleArray2;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 5 != 9
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1936.738560524645;
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = (-662.41);
      doubleArray0[3] = (-2245.229986097121);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = Double.NaN;
      double[][] doubleArray1 = new double[2][3];
      doubleArray1[0] = null;
      doubleArray1[1] = null;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, (double[]) null, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-3252.91045);
      double double0 = 0.0;
      doubleArray0[1] = 0.0;
      double[][] doubleArray1 = new double[0][5];
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[][] doubleArray0 = new double[0][1];
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction((double[]) null, (double[]) null, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 2075.7049296;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1284.761506);
      doubleArray0[3] = 533.0;
      doubleArray0[4] = 559.95666;
      doubleArray0[5] = (-291.66268);
      double double0 = 1074.0;
      doubleArray0[6] = 1074.0;
      doubleArray0[7] = (-1479.5985844934);
      doubleArray0[8] = (-1.0);
      double[] doubleArray1 = new double[0];
      double[][] doubleArray2 = new double[4][8];
      doubleArray2[0] = doubleArray0;
      doubleArray2[1] = doubleArray0;
      doubleArray2[2] = doubleArray1;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = 2153.714392;
      doubleArray2[3] = doubleArray3;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[][] doubleArray1 = new double[3][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = Double.NaN;
      doubleArray0[1] = Double.NaN;
      doubleArray0[2] = 1.0;
      doubleArray0[3] = (-626.7429);
      doubleArray0[4] = 0.0;
      double[][] doubleArray1 = new double[7][3];
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = 1.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (-626.7429);
      doubleArray2[3] = 0.0;
      doubleArray1[0] = doubleArray2;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // insufficient data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = (-1157.93273);
      doubleArray0[0] = (-1157.93273);
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 167.23926923;
      doubleArray0[5] = 563.98709789;
      doubleArray0[6] = 1750.1192336680303;
      doubleArray0[7] = 0.0;
      double[][] doubleArray1 = new double[8][5];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // points 0 and 1 are not strictly increasing (0 >= 0)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      double[][] doubleArray1 = new double[6][9];
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      doubleArray1[0] = doubleArray2;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // insufficient data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[1][8];
      doubleArray1[0] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // insufficient data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1763.996;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2870.2981721;
      doubleArray0[3] = 480.1154476521476;
      doubleArray0[4] = (-479.0625436026169);
      double[][] doubleArray1 = new double[8][1];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 5 != 8
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1710.1733;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 2182.836155731666;
      doubleArray0[3] = (-1.0);
      doubleArray0[4] = (-1186.3);
      double[][] doubleArray1 = new double[5][2];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // points 0 and 1 are not strictly increasing (1,710.173 >= 0)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1.0);
      doubleArray0[1] = (-526.0);
      double[] doubleArray1 = new double[0];
      double[][] doubleArray2 = new double[4][5];
      doubleArray2[0] = doubleArray0;
      doubleArray2[1] = doubleArray0;
      doubleArray2[2] = doubleArray0;
      doubleArray2[3] = doubleArray1;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[][] doubleArray1 = new double[1][3];
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, (double[]) null, (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[][] doubleArray0 = new double[5][1];
      double[] doubleArray1 = new double[9];
      doubleArray1[8] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[5] = (-349.22);
      doubleArray1[5] = (-349.22);
      doubleArray1[4] = 0.0;
      doubleArray1[6] = (-1415.77451);
      doubleArray1[7] = (-349.22);
      doubleArray1[8] = 0.0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray1, doubleArray1, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // insufficient data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-927.9);
      doubleArray0[1] = (-2911.8085);
      doubleArray0[2] = 0.041666663879186654;
      doubleArray0[3] = 5.669184079525E-24;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction((double[]) null, doubleArray0, (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2087.22310475);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value((-1401.426739), 871.28987092);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(0.0, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.value(518.861915970508, (-2087.22310475));
      piecewiseBicubicSplineInterpolatingFunction0.value((-58.36137545997263), 0.0);
      piecewiseBicubicSplineInterpolatingFunction0.value((-1.0), (-1013.4));
      piecewiseBicubicSplineInterpolatingFunction0.value(518.861915970508, 275.4768971115);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(3777.710311, 1.0);
      piecewiseBicubicSplineInterpolatingFunction0.value((-71.630873), 0.0);
      piecewiseBicubicSplineInterpolatingFunction0.value(3367.62260639309, (-1695.61233967));
      try { 
        piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, 3464.989512);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 3,464.99 out of [-2,087.223, 3,368.684] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-2086.1679836536555);
      doubleArray0[1] = (-1401.426739);
      doubleArray0[2] = 518.861915970508;
      doubleArray0[3] = 871.28987092;
      doubleArray0[4] = 3368.68441195;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
      piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, (-1115.129397679686));
      piecewiseBicubicSplineInterpolatingFunction0.value(3368.68441195, 3368.68441195);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(518.861915970508, (-1401.426739));
      piecewiseBicubicSplineInterpolatingFunction0.value(1.375, 518.861915970508);
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint(871.28987092, (-2335.0));
      piecewiseBicubicSplineInterpolatingFunction0.isValidPoint((-2913.2165696934), 433.15581591399);
      try { 
        piecewiseBicubicSplineInterpolatingFunction0.value(871.28987092, (-2087.22310475));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -2,087.223 out of [-2,086.168, 3,368.684] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1.0;
      double double0 = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1829.136);
      doubleArray0[4] = 199.787046;
      double[][] doubleArray1 = new double[1][9];
      doubleArray1[0] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // insufficient data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      double[][] doubleArray1 = new double[5][1];
      double[] doubleArray2 = new double[14];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = 0.0;
      doubleArray2[6] = (-1415.77451);
      doubleArray2[7] = 0.0;
      doubleArray2[8] = 0.0;
      doubleArray1[0] = doubleArray2;
      doubleArray1[1] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 5 != 14
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double double0 = 2020.2101579894045;
      double[][] doubleArray0 = new double[9][8];
      doubleArray0[1] = doubleArray0[0];
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0[1], doubleArray0[1], doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 8 != 9
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PiecewiseBicubicSplineInterpolatingFunction piecewiseBicubicSplineInterpolatingFunction0 = null;
      try {
        piecewiseBicubicSplineInterpolatingFunction0 = new PiecewiseBicubicSplineInterpolatingFunction(doubleArray0, doubleArray0, (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }
}
