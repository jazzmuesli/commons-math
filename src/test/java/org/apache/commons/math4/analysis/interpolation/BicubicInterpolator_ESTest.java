/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:16:39 GMT 2019
 */

package org.apache.commons.math4.analysis.interpolation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunction;
import org.apache.commons.math4.analysis.interpolation.BicubicInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BicubicInterpolator_ESTest extends BicubicInterpolator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-6.0);
      double[] doubleArray1 = new double[1];
      double[][] doubleArray2 = new double[1][7];
      BicubicInterpolatingFunction bicubicInterpolatingFunction0 = bicubicInterpolator0.interpolate(doubleArray1, doubleArray0, doubleArray2);
      assertNotNull(bicubicInterpolatingFunction0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[1];
      double[][] doubleArray2 = new double[6][6];
      try { 
        bicubicInterpolator0.interpolate(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 4 != 6
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[8];
      double[][] doubleArray1 = new double[1][1];
      try { 
        bicubicInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 8 != 1
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      // Undeclared exception!
      try { 
        bicubicInterpolator0.interpolate((double[]) null, (double[]) null, (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2.0);
      doubleArray0[1] = (-1.0);
      doubleArray0[3] = 4049.33688;
      double[][] doubleArray1 = new double[4][6];
      double[] doubleArray2 = new double[0];
      doubleArray1[1] = doubleArray2;
      // Undeclared exception!
      try { 
        bicubicInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2.0);
      doubleArray0[1] = (-1.0);
      doubleArray0[3] = 4049.33688;
      double[][] doubleArray1 = new double[4][6];
      try { 
        bicubicInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 6 != 4
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[0][0];
      try { 
        bicubicInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[0];
      double[][] doubleArray2 = new double[7][0];
      try { 
        bicubicInterpolator0.interpolate(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BicubicInterpolator bicubicInterpolator0 = new BicubicInterpolator();
      double[] doubleArray0 = new double[0];
      double[][] doubleArray1 = new double[4][0];
      try { 
        bicubicInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.BicubicInterpolator", e);
      }
  }
}
