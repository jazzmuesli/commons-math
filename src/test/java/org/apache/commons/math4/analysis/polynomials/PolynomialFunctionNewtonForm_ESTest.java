/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:06:56 GMT 2019
 */

package org.apache.commons.math4.analysis.polynomials;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class PolynomialFunctionNewtonForm_ESTest extends PolynomialFunctionNewtonForm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray0[3] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      double[] doubleArray2 = polynomialFunctionNewtonForm0.getCoefficients();
      polynomialFunctionNewtonForm0.value(0.0);
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = 0.0;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (-1696.5652756563404);
      doubleArray3[3] = 0.0;
      doubleArray3[6] = 410.137430994;
      PolynomialFunctionNewtonForm.evaluate(doubleArray2, doubleArray3, (-2835.6773213696356));
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm1 = null;
      try {
        polynomialFunctionNewtonForm1 = new PolynomialFunctionNewtonForm(doubleArray3, doubleArray3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (7 != 7 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray0[3] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      PolynomialFunctionNewtonForm.evaluate(doubleArray0, doubleArray1, 0.0);
      polynomialFunctionNewtonForm0.value(0.0);
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (-1696.5652756563404);
      doubleArray2[3] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray2[5] = (-1696.5652756563404);
      doubleArray2[6] = 410.137430994;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm1 = null;
      try {
        polynomialFunctionNewtonForm1 = new PolynomialFunctionNewtonForm(doubleArray2, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (7 != 7 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 410.137430994;
      doubleArray1[1] = (-623.91202406);
      doubleArray1[2] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[4] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      polynomialFunctionNewtonForm0.value(0.0);
      DerivativeStructure derivativeStructure0 = null;
      polynomialFunctionNewtonForm0.getCoefficients();
      polynomialFunctionNewtonForm0.getCoefficients();
      double double0 = 9.869604401089358;
      // Undeclared exception!
      try { 
        polynomialFunctionNewtonForm0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[1] = (-623.91202406);
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[2] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[5] = 0.0;
      doubleArray1[4] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      DerivativeStructure derivativeStructure0 = mock(DerivativeStructure.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(derivativeStructure0).getFreeParameters();
      doReturn(0).when(derivativeStructure0).getOrder();
      doReturn((DerivativeStructure) null).when(derivativeStructure0).subtract(anyDouble());
      // Undeclared exception!
      try { 
        polynomialFunctionNewtonForm0.value(derivativeStructure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray1[2] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[4] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      polynomialFunctionNewtonForm0.computeCoefficients();
      polynomialFunctionNewtonForm0.getCoefficients();
      // Undeclared exception!
      try { 
        polynomialFunctionNewtonForm0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray1[2] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[4] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      polynomialFunctionNewtonForm0.getCoefficients();
      // Undeclared exception!
      try { 
        polynomialFunctionNewtonForm0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray1[2] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      PolynomialFunctionNewtonForm.verifyInputArray(doubleArray0, doubleArray1);
      polynomialFunctionNewtonForm0.degree();
      // Undeclared exception!
      try { 
        polynomialFunctionNewtonForm0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray0[3] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      polynomialFunctionNewtonForm0.value(0.0);
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (-1696.5652756563404);
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = (-1696.5652756563404);
      doubleArray2[6] = 410.137430994;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm1 = null;
      try {
        polynomialFunctionNewtonForm1 = new PolynomialFunctionNewtonForm(doubleArray2, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (7 != 7 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      try { 
        PolynomialFunctionNewtonForm.evaluate(doubleArray0, doubleArray0, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // empty polynomials coefficients array
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double double0 = (-763.1463906);
      doubleArray0[0] = (-763.1463906);
      doubleArray0[1] = 0.0;
      double double1 = 2173.48437783088;
      doubleArray0[2] = 2173.48437783088;
      double double2 = (-285.304031886961);
      doubleArray0[3] = (-285.304031886961);
      doubleArray0[4] = (-451.2714);
      double double3 = (-350.0);
      doubleArray0[5] = (-350.0);
      doubleArray0[6] = (-1.0);
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 0.0;
      double[] doubleArray1 = new double[0];
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // empty polynomials coefficients array
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = null;
      try { 
        PolynomialFunctionNewtonForm.evaluate((double[]) null, (double[]) null, 2924.67426534);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      try { 
        PolynomialFunctionNewtonForm.verifyInputArray(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // empty polynomials coefficients array
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = null;
      try { 
        PolynomialFunctionNewtonForm.verifyInputArray((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray1[2] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      // Undeclared exception!
      try { 
        polynomialFunctionNewtonForm0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // empty polynomials coefficients array
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1265.8085933139;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 1.0;
      doubleArray0[5] = 0.0;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.0;
      try { 
        PolynomialFunctionNewtonForm.evaluate(doubleArray0, doubleArray1, 727.98);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (6 != 1 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      double[] doubleArray1 = new double[5];
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[4] = 4044.6910678;
      try { 
        PolynomialFunctionNewtonForm.verifyInputArray(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (2 != 5 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = null;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1792.61717;
      doubleArray0[1] = 1387.42008946894;
      doubleArray0[2] = (-3573.84782125599);
      doubleArray0[3] = (-2693.037082459744);
      doubleArray0[4] = (-3618.9959874);
      doubleArray0[5] = 1035.18;
      doubleArray0[6] = 0.0;
      try { 
        PolynomialFunctionNewtonForm.evaluate(doubleArray0, doubleArray0, 1387.42008946894);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (7 != 7 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      double double0 = 839.5;
      doubleArray0[0] = 839.5;
      double double1 = (-2.0);
      doubleArray0[1] = (-2.0);
      doubleArray0[2] = 573.0235288595863;
      double double2 = 0.5;
      doubleArray0[3] = 0.5;
      try { 
        PolynomialFunctionNewtonForm.verifyInputArray(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (4 != 4 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-4772.712834);
      doubleArray0[1] = Double.POSITIVE_INFINITY;
      doubleArray0[2] = 199.69458195;
      doubleArray0[3] = (-2255.14442);
      doubleArray0[4] = (-4823.19);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 1.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (8 != 8 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1357.50941269432;
      try { 
        PolynomialFunctionNewtonForm.evaluate(doubleArray0, doubleArray0, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (2 != 2 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 2.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (1 != 1 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // empty polynomials coefficients array
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-200.0);
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (1 != 1 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = 2015.35;
      double[] doubleArray1 = new double[7];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = 410.137430994;
      doubleArray1[1] = (-623.91202406);
      doubleArray1[2] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[4] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {(-3458.34), (-4491.28227131633), 0.0, 0.5, (-1696.5652756563404), (-623.91202406), 410.137430994, 2015.35}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {410.137430994, (-623.91202406), (-623.91202406), (-1431.4288808), 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertNotNull(polynomialFunctionNewtonForm0);
      assertEquals(8, doubleArray0.length);
      assertEquals(7, doubleArray1.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(7, polynomialFunctionNewtonForm0.degree());
      
      DerivativeStructure derivativeStructure0 = null;
      double[] doubleArray2 = polynomialFunctionNewtonForm0.getCoefficients();
      assertArrayEquals(new double[] {(-3458.34), (-4491.28227131633), 0.0, 0.5, (-1696.5652756563404), (-623.91202406), 410.137430994, 2015.35}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {3.877183711646205E14, 1.4315187832322825E14, (-9.352208662856464E13), (-4.60708851058567E14), (-6.747454243455076E11), 2.1706068242985744E9, 4573472.056176158, 2015.35}, doubleArray2, 0.01);
      assertArrayEquals(new double[] {410.137430994, (-623.91202406), (-623.91202406), (-1431.4288808), 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertNotNull(doubleArray2);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray0, doubleArray2);
      assertNotSame(doubleArray2, doubleArray0);
      assertNotSame(doubleArray2, doubleArray1);
      assertNotSame(doubleArray1, doubleArray2);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(8, doubleArray0.length);
      assertEquals(8, doubleArray2.length);
      assertEquals(7, doubleArray1.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(7, polynomialFunctionNewtonForm0.degree());
      
      double[] doubleArray3 = polynomialFunctionNewtonForm0.getCoefficients();
      assertArrayEquals(new double[] {(-3458.34), (-4491.28227131633), 0.0, 0.5, (-1696.5652756563404), (-623.91202406), 410.137430994, 2015.35}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {3.877183711646205E14, 1.4315187832322825E14, (-9.352208662856464E13), (-4.60708851058567E14), (-6.747454243455076E11), 2.1706068242985744E9, 4573472.056176158, 2015.35}, doubleArray3, 0.01);
      assertArrayEquals(new double[] {410.137430994, (-623.91202406), (-623.91202406), (-1431.4288808), 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertNotNull(doubleArray3);
      assertNotSame(doubleArray0, doubleArray3);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray0, doubleArray2);
      assertNotSame(doubleArray3, doubleArray2);
      assertNotSame(doubleArray3, doubleArray0);
      assertNotSame(doubleArray3, doubleArray1);
      assertNotSame(doubleArray1, doubleArray2);
      assertNotSame(doubleArray1, doubleArray3);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(8, doubleArray0.length);
      assertEquals(8, doubleArray3.length);
      assertEquals(7, doubleArray1.length);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray0.equals((Object)doubleArray2));
      assertFalse(doubleArray3.equals((Object)doubleArray2));
      assertFalse(doubleArray3.equals((Object)doubleArray0));
      assertFalse(doubleArray3.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray2));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(7, polynomialFunctionNewtonForm0.degree());
      
      double double0 = 9.869604401089358;
      // Undeclared exception!
      try { 
        polynomialFunctionNewtonForm0.value((DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-282.1973685492);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-3671.8153);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 2245.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-320.6572132);
      double[] doubleArray1 = new double[0];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // empty polynomials coefficients array
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = 1.0;
      doubleArray0[0] = 1.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (1 != 1 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DerivativeStructure derivativeStructure0 = mock(DerivativeStructure.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[0];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = null;
      try {
        polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // empty polynomials coefficients array
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3458.34);
      doubleArray0[1] = (-4491.28227131633);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.5;
      doubleArray0[4] = (-1696.5652756563404);
      doubleArray0[5] = (-623.91202406);
      doubleArray0[6] = 410.137430994;
      doubleArray0[7] = (-730.1485402);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-623.91202406);
      doubleArray1[1] = 0.5;
      doubleArray0[3] = (-623.91202406);
      doubleArray1[3] = (-1431.4288808);
      doubleArray1[4] = 410.137430994;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm0 = new PolynomialFunctionNewtonForm(doubleArray0, doubleArray1);
      polynomialFunctionNewtonForm0.value(0.0);
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (-1696.5652756563404);
      doubleArray2[3] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray2[5] = (-1696.5652756563404);
      doubleArray2[6] = 410.137430994;
      PolynomialFunctionNewtonForm polynomialFunctionNewtonForm1 = null;
      try {
        polynomialFunctionNewtonForm1 = new PolynomialFunctionNewtonForm(doubleArray2, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array sizes should have difference 1 (7 != 7 + 1)
         //
         verifyException("org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonForm", e);
      }
  }
}
