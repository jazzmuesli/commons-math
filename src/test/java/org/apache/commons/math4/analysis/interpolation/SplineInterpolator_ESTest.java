/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:19:54 GMT 2019
 */

package org.apache.commons.math4.analysis.interpolation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.interpolation.SplineInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SplineInterpolator_ESTest extends SplineInterpolator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (-0.9825036596238069);
      doubleArray0[0] = (-398.006248988);
      doubleArray0[3] = 1323.3103826506;
      SplineInterpolator splineInterpolator0 = new SplineInterpolator();
      double[] doubleArray1 = new double[4];
      splineInterpolator0.interpolate(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SplineInterpolator splineInterpolator0 = new SplineInterpolator();
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[2];
      try { 
        splineInterpolator0.interpolate(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // number of points (2)
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.SplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SplineInterpolator splineInterpolator0 = new SplineInterpolator();
      double[] doubleArray0 = new double[3];
      try { 
        splineInterpolator0.interpolate(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // points 0 and 1 are not strictly increasing (0 >= 0)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SplineInterpolator splineInterpolator0 = new SplineInterpolator();
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[0];
      try { 
        splineInterpolator0.interpolate(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 7 != 0
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.SplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      SplineInterpolator splineInterpolator0 = new SplineInterpolator();
      // Undeclared exception!
      try { 
        splineInterpolator0.interpolate(doubleArray0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.SplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SplineInterpolator splineInterpolator0 = new SplineInterpolator();
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[1];
      try { 
        splineInterpolator0.interpolate(doubleArray1, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 1 != 2
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.SplineInterpolator", e);
      }
  }
}
