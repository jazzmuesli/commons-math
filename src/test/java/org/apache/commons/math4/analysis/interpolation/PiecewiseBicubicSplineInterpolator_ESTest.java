/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:15:52 GMT 2019
 */

package org.apache.commons.math4.analysis.interpolation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PiecewiseBicubicSplineInterpolator_ESTest extends PiecewiseBicubicSplineInterpolator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[] doubleArray1 = new double[1];
      double[][] doubleArray2 = new double[2][3];
      // Undeclared exception!
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // insufficient data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[] doubleArray0 = new double[4];
      double[][] doubleArray1 = new double[1][9];
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // points 0 and 1 are not strictly increasing (0 >= 0)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[] doubleArray0 = new double[7];
      double[][] doubleArray1 = new double[0][4];
      // Undeclared exception!
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[] doubleArray0 = new double[6];
      double[] doubleArray1 = new double[0];
      double[][] doubleArray2 = new double[5][4];
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[][] doubleArray1 = new double[2][3];
      doubleArray1[0] = null;
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0, doubleArray0, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[][] doubleArray0 = new double[3][1];
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0[0], doubleArray0[0], (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[] doubleArray0 = new double[3];
      double[][] doubleArray1 = new double[8][5];
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0, (double[]) null, doubleArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[5];
      double[][] doubleArray2 = new double[3][9];
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate(doubleArray0, doubleArray1, doubleArray2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PiecewiseBicubicSplineInterpolator piecewiseBicubicSplineInterpolator0 = new PiecewiseBicubicSplineInterpolator();
      double[][] doubleArray0 = new double[8][9];
      try { 
        piecewiseBicubicSplineInterpolator0.interpolate((double[]) null, (double[]) null, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolator", e);
      }
  }
}
