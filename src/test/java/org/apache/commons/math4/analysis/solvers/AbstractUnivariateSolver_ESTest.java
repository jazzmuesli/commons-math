/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:02:03 GMT 2019
 */

package org.apache.commons.math4.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math4.analysis.solvers.BrentSolver;
import org.apache.commons.math4.analysis.solvers.RiddersSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AbstractUnivariateSolver_ESTest extends AbstractUnivariateSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RiddersSolver riddersSolver0 = new RiddersSolver((-733.0), 3782.07437);
      assertEquals(0.0, riddersSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BrentSolver brentSolver0 = new BrentSolver(1.0E-14);
      assertEquals(1.0E-14, brentSolver0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = null;
      try {
        bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(1.0E-14, 1.0E-14, 1.0E-14, (-2072));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -2,072 is smaller than the minimum (2)
         //
         verifyException("org.apache.commons.math4.analysis.solvers.BracketingNthOrderBrentSolver", e);
      }
  }
}
