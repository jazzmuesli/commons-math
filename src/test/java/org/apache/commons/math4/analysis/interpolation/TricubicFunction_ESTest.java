/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:37:36 GMT 2019
 */

package org.apache.commons.math4.analysis.interpolation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.interpolation.TricubicFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class TricubicFunction_ESTest extends TricubicFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[72];
      doubleArray0[6] = 1.3702282861795316;
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      assertNotNull(tricubicFunction0);
      assertEquals(72, doubleArray0.length);
      
      double double0 = tricubicFunction0.value(1.0, 0.7485659504526692, 0.0);
      assertEquals(1.0257062393811132, double0, 0.01);
      assertEquals(72, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[64];
      doubleArray0[1] = (-8.589929148649343);
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      assertNotNull(tricubicFunction0);
      assertEquals(64, doubleArray0.length);
      
      double double0 = tricubicFunction0.value(0.5272575430968345, 1.0, 1.0);
      assertEquals((-4.529104938292736), double0, 0.01);
      assertEquals(64, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TricubicFunction tricubicFunction0 = null;
      try {
        tricubicFunction0 = new TricubicFunction((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[49];
      TricubicFunction tricubicFunction0 = null;
      try {
        tricubicFunction0 = new TricubicFunction(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 52
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[76];
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      assertNotNull(tricubicFunction0);
      assertEquals(76, doubleArray0.length);
      
      try { 
        tricubicFunction0.value(1.0, 0.0, 23.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 23 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[68];
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      assertNotNull(tricubicFunction0);
      assertEquals(68, doubleArray0.length);
      
      try { 
        tricubicFunction0.value(0.0, 0.0, (-2351.73));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -2,351.73 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[72];
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      assertNotNull(tricubicFunction0);
      assertEquals(72, doubleArray0.length);
      
      try { 
        tricubicFunction0.value(0.0, (-98.74252925299123), 416.8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -98.743 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[72];
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      assertNotNull(tricubicFunction0);
      assertEquals(72, doubleArray0.length);
      
      try { 
        tricubicFunction0.value(416.8, 0.0, 1.3702282861795316);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 416.8 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[72];
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      assertNotNull(tricubicFunction0);
      assertEquals(72, doubleArray0.length);
      
      double double0 = tricubicFunction0.value(0.0, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(72, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[72];
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      try { 
        tricubicFunction0.value((-7.691754429730564), 0.0, 1.3702282861795316);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -7.692 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[64];
      TricubicFunction tricubicFunction0 = new TricubicFunction(doubleArray0);
      try { 
        tricubicFunction0.value(0.0, 1716.5377353741, 1.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 1,716.538 out of [0, 1] range
         //
         verifyException("org.apache.commons.math4.analysis.interpolation.TricubicFunction", e);
      }
  }
}
