/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:43:01 GMT 2019
 */

package org.apache.commons.math4.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math4.analysis.differentiation.UnivariateDifferentiableFunction;
import org.apache.commons.math4.analysis.solvers.NewtonRaphsonSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractUnivariateDifferentiableSolver_ESTest extends AbstractUnivariateDifferentiableSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      UnivariateDifferentiableFunction univariateDifferentiableFunction0 = mock(UnivariateDifferentiableFunction.class, new ViolatedAssumptionAnswer());
      doReturn((DerivativeStructure) null).when(univariateDifferentiableFunction0).value(any(org.apache.commons.math4.analysis.differentiation.DerivativeStructure.class));
      // Undeclared exception!
      try { 
        newtonRaphsonSolver0.solve(27, univariateDifferentiableFunction0, (double) 27, (double) 27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.solvers.NewtonRaphsonSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      UnivariateDifferentiableFunction univariateDifferentiableFunction0 = mock(UnivariateDifferentiableFunction.class, new ViolatedAssumptionAnswer());
      doReturn((DerivativeStructure) null).when(univariateDifferentiableFunction0).value(any(org.apache.commons.math4.analysis.differentiation.DerivativeStructure.class));
      newtonRaphsonSolver0.setup(630, univariateDifferentiableFunction0, 630, 630, 630);
      newtonRaphsonSolver0.computeObjectiveValueAndDerivative((-1.0));
      assertEquals(630.0, newtonRaphsonSolver0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      // Undeclared exception!
      try { 
        newtonRaphsonSolver0.setup(3148, (UnivariateDifferentiableFunction) null, 3993.89697122, 3148, 3993.89697122);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NewtonRaphsonSolver newtonRaphsonSolver0 = new NewtonRaphsonSolver();
      try { 
        newtonRaphsonSolver0.computeObjectiveValueAndDerivative(630);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math4.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }
}
