/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:27:21 GMT 2019
 */

package org.apache.commons.math4.analysis.integration;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.analysis.UnivariateFunction;
import org.apache.commons.math4.analysis.integration.SimpsonIntegrator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class SimpsonIntegrator_ESTest extends SimpsonIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpsonIntegrator simpsonIntegrator0 = new SimpsonIntegrator();
      UnivariateFunction univariateFunction0 = mock(UnivariateFunction.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(univariateFunction0).value(anyDouble());
      simpsonIntegrator0.integrate(2439, univariateFunction0, (-1615.81139917707), 1324.450904560635);
      simpsonIntegrator0.doIntegrate();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpsonIntegrator simpsonIntegrator0 = new SimpsonIntegrator();
      // Undeclared exception!
      try { 
        simpsonIntegrator0.doIntegrate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math4.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpsonIntegrator simpsonIntegrator0 = null;
      try {
        simpsonIntegrator0 = new SimpsonIntegrator((-1796), 257);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -1,796 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math4.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpsonIntegrator simpsonIntegrator0 = null;
      try {
        simpsonIntegrator0 = new SimpsonIntegrator((-3034.879), (-197.3), (-1413), (-1413));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -1,413 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math4.analysis.integration.BaseAbstractUnivariateIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpsonIntegrator simpsonIntegrator0 = new SimpsonIntegrator();
      UnivariateFunction univariateFunction0 = mock(UnivariateFunction.class, new ViolatedAssumptionAnswer());
      doReturn(1.5874010519681994, (double)63, 1.5874010519681994, 1.5874010519681994, 5.650007086920087E-9).when(univariateFunction0).value(anyDouble());
      // Undeclared exception!
      simpsonIntegrator0.integrate(Integer.MAX_VALUE, univariateFunction0, (-1615.81139917707), 1326.9931802719327);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpsonIntegrator simpsonIntegrator0 = null;
      try {
        simpsonIntegrator0 = new SimpsonIntegrator(2, 1299);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 1,299 is larger than, or equal to, the maximum (63)
         //
         verifyException("org.apache.commons.math4.analysis.integration.SimpsonIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SimpsonIntegrator simpsonIntegrator0 = null;
      try {
        simpsonIntegrator0 = new SimpsonIntegrator((-79.463851795), 4.4234557344843047E-4, 485, 3618);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 3,618 is larger than, or equal to, the maximum (63)
         //
         verifyException("org.apache.commons.math4.analysis.integration.SimpsonIntegrator", e);
      }
  }
}
