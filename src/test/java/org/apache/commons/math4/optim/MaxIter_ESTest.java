/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:06:31 GMT 2019
 */

package org.apache.commons.math4.optim;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.optim.MaxIter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MaxIter_ESTest extends MaxIter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MaxIter maxIter0 = new MaxIter(1300);
      assertEquals(1300, maxIter0.getMaxIter());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MaxIter maxIter0 = null;
      try {
        maxIter0 = new MaxIter((-235));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // -235 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math4.optim.MaxIter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MaxIter maxIter0 = MaxIter.unlimited();
      int int0 = maxIter0.getMaxIter();
      assertEquals(Integer.MAX_VALUE, int0);
  }
}
