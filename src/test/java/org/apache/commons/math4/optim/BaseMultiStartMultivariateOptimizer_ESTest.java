/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:29:30 GMT 2019
 */

package org.apache.commons.math4.optim;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.optim.ConvergenceChecker;
import org.apache.commons.math4.optim.MaxEval;
import org.apache.commons.math4.optim.OptimizationData;
import org.apache.commons.math4.optim.PointValuePair;
import org.apache.commons.math4.optim.nonlinear.scalar.MultiStartMultivariateOptimizer;
import org.apache.commons.math4.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer;
import org.apache.commons.math4.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math4.random.RandomVectorGenerator;
import org.apache.commons.rng.core.source32.KISSRandom;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BaseMultiStartMultivariateOptimizer_ESTest extends BaseMultiStartMultivariateOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(0, (-1.0), (-1.0));
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(bOBYQAOptimizer0, 2, (RandomVectorGenerator) null);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      MaxEval maxEval0 = new MaxEval(926);
      optimizationDataArray0[1] = (OptimizationData) maxEval0;
      // Undeclared exception!
      try { 
        multiStartMultivariateOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state
         //
         verifyException("org.apache.commons.math4.optim.BaseMultiStartMultivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[2];
      KISSRandom kISSRandom0 = new KISSRandom(intArray0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, true, 0, 0, kISSRandom0, true, (ConvergenceChecker<PointValuePair>) null);
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = null;
      try {
        multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(cMAESOptimizer0, 0, (RandomVectorGenerator) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math4.optim.BaseMultiStartMultivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BOBYQAOptimizer bOBYQAOptimizer0 = new BOBYQAOptimizer(0, (-1.0), (-1.0));
      MultiStartMultivariateOptimizer multiStartMultivariateOptimizer0 = new MultiStartMultivariateOptimizer(bOBYQAOptimizer0, 2, (RandomVectorGenerator) null);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      // Undeclared exception!
      try { 
        multiStartMultivariateOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state
         //
         verifyException("org.apache.commons.math4.optim.BaseMultiStartMultivariateOptimizer", e);
      }
  }
}
