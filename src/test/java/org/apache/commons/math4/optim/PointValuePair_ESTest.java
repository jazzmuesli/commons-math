/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:18:34 GMT 2019
 */

package org.apache.commons.math4.optim;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math4.optim.PointValuePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PointValuePair_ESTest extends PointValuePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PointValuePair pointValuePair0 = new PointValuePair((double[]) null, (-1127.42839));
      double[] doubleArray0 = pointValuePair0.getPointRef();
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 1.0);
      double[] doubleArray1 = pointValuePair0.getPointRef();
      assertArrayEquals(new double[] {}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, (-1.0));
      double[] doubleArray1 = pointValuePair0.getPoint();
      assertNotSame(doubleArray0, doubleArray1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, (-1903.40210365), true);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PointValuePair pointValuePair0 = new PointValuePair((double[]) null, 501.2462986049, true);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 0.0);
      double[] doubleArray1 = pointValuePair0.getPoint();
      assertEquals(1, doubleArray1.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, (-2080.0), false);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      PointValuePair pointValuePair0 = new PointValuePair(doubleArray0, 0.0);
      double[] doubleArray1 = pointValuePair0.getPointRef();
      assertNotSame(doubleArray1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PointValuePair pointValuePair0 = new PointValuePair((double[]) null, (-929.97));
      double[] doubleArray0 = pointValuePair0.getPoint();
      assertNull(doubleArray0);
  }
}
