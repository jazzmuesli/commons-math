/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:21:18 GMT 2019
 */

package org.apache.commons.math4.optim.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math4.optim.linear.Relationship;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Relationship_ESTest extends Relationship_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Relationship[] relationshipArray0 = Relationship.values();
      assertEquals(3, relationshipArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Relationship relationship0 = Relationship.valueOf("GEQ");
      assertEquals(">=", relationship0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Relationship relationship0 = Relationship.EQ;
      Relationship relationship1 = relationship0.oppositeRelationship();
      assertEquals(Relationship.EQ, relationship1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Relationship relationship0 = Relationship.GEQ;
      Relationship relationship1 = relationship0.oppositeRelationship();
      assertEquals(Relationship.LEQ, relationship1);
      
      Relationship relationship2 = relationship1.oppositeRelationship();
      assertEquals(Relationship.GEQ, relationship2);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Relationship relationship0 = Relationship.EQ;
      String string0 = relationship0.toString();
      assertEquals("=", string0);
  }
}
