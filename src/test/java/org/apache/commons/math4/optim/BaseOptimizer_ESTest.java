/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:30:36 GMT 2019
 */

package org.apache.commons.math4.optim;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.optim.MaxEval;
import org.apache.commons.math4.optim.MaxIter;
import org.apache.commons.math4.optim.OptimizationData;
import org.apache.commons.math4.optim.linear.SimplexSolver;
import org.apache.commons.math4.optim.univariate.BrentOptimizer;
import org.apache.commons.math4.optim.univariate.MultiStartUnivariateOptimizer;
import org.apache.commons.rng.core.source64.SplitMix64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class BaseOptimizer_ESTest extends BaseOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(415.6728, 415.6728);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      MaxEval maxEval0 = new MaxEval(308);
      optimizationDataArray0[3] = (OptimizationData) maxEval0;
      // Undeclared exception!
      try { 
        brentOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.optim.univariate.UnivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimplexSolver simplexSolver0 = new SimplexSolver();
      // Undeclared exception!
      try { 
        simplexSolver0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(1.0, 5.0);
      Long long0 = new Long(1);
      SplitMix64 splitMix64_0 = new SplitMix64(long0);
      MultiStartUnivariateOptimizer multiStartUnivariateOptimizer0 = new MultiStartUnivariateOptimizer(brentOptimizer0, 1, splitMix64_0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      MaxIter maxIter0 = new MaxIter(1709);
      optimizationDataArray0[2] = (OptimizationData) maxIter0;
      // Undeclared exception!
      try { 
        multiStartUnivariateOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state
         //
         verifyException("org.apache.commons.math4.optim.univariate.MultiStartUnivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(356.51175527, 356.51175527);
      int int0 = brentOptimizer0.getEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimplexSolver simplexSolver0 = new SimplexSolver();
      int int0 = simplexSolver0.getIterations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(356.51175527, 356.51175527);
      int int0 = brentOptimizer0.getMaxEvaluations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(356.51175527, 356.51175527);
      int int0 = brentOptimizer0.getMaxIterations();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BrentOptimizer brentOptimizer0 = new BrentOptimizer(2021.2287, 2021.2287);
      try { 
        brentOptimizer0.optimize();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math4.optim.BaseOptimizer$MaxEvalCallback", e);
      }
  }
}
