/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:13:27 GMT 2019
 */

package org.apache.commons.math4.stat.descriptive.rank;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.stat.descriptive.rank.Median;
import org.apache.commons.math4.stat.descriptive.rank.Percentile;
import org.apache.commons.math4.stat.ranking.NaNStrategy;
import org.apache.commons.math4.util.KthSelector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Median_ESTest extends Median_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Median median0 = new Median();
      KthSelector kthSelector0 = mock(KthSelector.class, new ViolatedAssumptionAnswer());
      Median median1 = median0.withKthSelector(kthSelector0);
      assertEquals(Percentile.EstimationType.LEGACY, median1.getEstimationType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Median median0 = null;
      try {
        median0 = new Median((Median) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Median median0 = new Median();
      Median median1 = new Median(median0);
      assertEquals(50.0, median1.getQuantile(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Median median0 = new Median();
      NaNStrategy naNStrategy0 = NaNStrategy.FIXED;
      Median median1 = median0.withNaNStrategy(naNStrategy0);
      assertNotSame(median0, median1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Median median0 = new Median();
      // Undeclared exception!
      try { 
        median0.withKthSelector((KthSelector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Median median0 = new Median();
      Percentile.EstimationType percentile_EstimationType0 = Percentile.EstimationType.R_9;
      Median median1 = median0.withEstimationType(percentile_EstimationType0);
      assertNotSame(median1, median0);
  }
}
