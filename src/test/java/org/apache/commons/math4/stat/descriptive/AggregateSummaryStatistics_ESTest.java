/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:20:23 GMT 2019
 */

package org.apache.commons.math4.stat.descriptive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math4.stat.descriptive.AggregateSummaryStatistics;
import org.apache.commons.math4.stat.descriptive.StatisticalSummary;
import org.apache.commons.math4.stat.descriptive.StatisticalSummaryValues;
import org.apache.commons.math4.stat.descriptive.SummaryStatistics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class AggregateSummaryStatistics_ESTest extends AggregateSummaryStatistics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn((-1599L)).when(summaryStatistics0).getN();
      doReturn(0.0).when(summaryStatistics0).getSumOfLogs();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getSumOfLogs();
      long long0 = aggregateSummaryStatistics0.getN();
      assertEquals((-1599L), long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(6207.544369286, 0.0).when(summaryStatistics0).getGeometricMean();
      doReturn(0.0, (-2226.824381860094)).when(summaryStatistics0).getMax();
      doReturn((-2226.824381860094), 0.0875862700108075, 114.760156348086, 6207.544369286, 446.467).when(summaryStatistics0).getMean();
      doReturn(446.467, 0.0, 0.0).when(summaryStatistics0).getMin();
      doReturn(1L).when(summaryStatistics0).getN();
      doReturn((-1541.38), 3123.432151).when(summaryStatistics0).getSecondMoment();
      doReturn((-814.52674238646), (double)1L).when(summaryStatistics0).getStandardDeviation();
      doReturn(0.0875862700108075, (-3438.22357), 114.760156348086).when(summaryStatistics0).getSum();
      doReturn(1579.7225502864, (double)1L).when(summaryStatistics0).getSumOfLogs();
      doReturn((-2226.824381860094), (-124.7187), 0.0, (-3434.6043722959)).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getGeometricMean();
      double double0 = aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getSecondMoment();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getStandardDeviation();
      double double1 = aggregateSummaryStatistics0.getSecondMoment();
      assertNotEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn((-1039.77563335545), 598.7803200123698).when(summaryStatistics0).getMax();
      doReturn(598.7803200123698, 598.7803200123698, (-785.785)).when(summaryStatistics0).getMean();
      doReturn((-785.785), (-1039.77563335545), 598.7803200123698).when(summaryStatistics0).getMin();
      doReturn((-863L), (-863L)).when(summaryStatistics0).getN();
      doReturn(0.0, 0.0, 2452.0).when(summaryStatistics0).getSum();
      doReturn(540.065305).when(summaryStatistics0).getSumsq();
      doReturn((-1036.7253670314), (-1889.820763252), 0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getMean();
      StatisticalSummary statisticalSummary0 = aggregateSummaryStatistics0.getSummary();
      assertEquals(2452.0, statisticalSummary0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics0).getGeometricMean();
      doReturn(4697L).when(summaryStatistics0).getN();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getGeometricMean();
      long long0 = aggregateSummaryStatistics0.getN();
      assertEquals(4697L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(summaryStatistics0).getGeometricMean();
      doReturn(1.9868161777724352E-8, 0.0, 1135.68326, 0.0, 2905.589486115055).when(summaryStatistics0).getMax();
      doReturn(0.0, 0.0, (-215.4), 0.16666666666666666, (-307.07180843009)).when(summaryStatistics0).getMean();
      doReturn((-774.69), 2905.589486115055, (-605.8603352034162), 6.123233995736766E-17).when(summaryStatistics0).getMin();
      doReturn((-1068L), 0L, 0L, (-1068L)).when(summaryStatistics0).getN();
      doReturn(Double.NaN, (-1561.5405084560705)).when(summaryStatistics0).getSecondMoment();
      doReturn(0.0, 176.0).when(summaryStatistics0).getStandardDeviation();
      doReturn(0.0, 0.0, 2905.589486115055, (-215.4), 1.073741824E9).when(summaryStatistics0).getSum();
      doReturn((-1060.9991781481506)).when(summaryStatistics0).getSumOfLogs();
      doReturn(0.0, (double)(-1068L), 0.0, 0.0).when(summaryStatistics0).getSumsq();
      doReturn(0.16666666666666666, (-6.3833662391), 176.0, 0.0, 0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getMean();
      double double0 = aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSecondMoment();
      double double1 = aggregateSummaryStatistics0.getSecondMoment();
      assertNotEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(1974.79131).when(summaryStatistics0).getMax();
      doReturn(1974.79131).when(summaryStatistics0).getMean();
      doReturn(1974.79131).when(summaryStatistics0).getMin();
      doReturn((-1L)).when(summaryStatistics0).getN();
      doReturn(1974.79131).when(summaryStatistics0).getSum();
      doReturn(1974.79131).when(summaryStatistics0).getSumOfLogs();
      doReturn(2.092571258544922).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getSumOfLogs();
      // Undeclared exception!
      try { 
        aggregateSummaryStatistics0.createContributingStatistics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(290.7944489, 290.7944489).when(summaryStatistics0).getGeometricMean();
      doReturn(290.7944489, 0.0).when(summaryStatistics0).getMax();
      doReturn((-1.0), (-4436.0), Double.NaN, Double.NaN, 0.0).when(summaryStatistics0).getMean();
      doReturn(1298.7191601576, 0.0, (-2608.254437387694)).when(summaryStatistics0).getMin();
      doReturn((-194L)).when(summaryStatistics0).getN();
      doReturn(Double.NaN, 0.0).when(summaryStatistics0).getSecondMoment();
      doReturn(786.7927, 0.0).when(summaryStatistics0).getStandardDeviation();
      doReturn(Double.NaN, (-2376.870916303), (-2608.254437387694)).when(summaryStatistics0).getSum();
      doReturn(Double.NaN, (-3.43338934259355E-8)).when(summaryStatistics0).getSumOfLogs();
      doReturn((-4436.0), 0.0, 133.4, 0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getSecondMoment();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getSumOfLogs();
      double double0 = aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getStandardDeviation();
      double double1 = aggregateSummaryStatistics0.getSecondMoment();
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getSumsq();
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics0).getGeometricMean();
      doReturn(336.7442013, 0.0).when(summaryStatistics0).getMax();
      doReturn(336.7442013).when(summaryStatistics0).getMean();
      doReturn(0.9285714285714286).when(summaryStatistics0).getMin();
      doReturn((-625L)).when(summaryStatistics0).getN();
      doReturn(1.0, (-1623.60806859)).when(summaryStatistics0).getSum();
      doReturn(0.0).when(summaryStatistics0).getSumOfLogs();
      doReturn((-1.0)).when(summaryStatistics0).getSumsq();
      doReturn(0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics1 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics1.getGeometricMean();
      aggregateSummaryStatistics1.getMax();
      aggregateSummaryStatistics1.getSumsq();
      aggregateSummaryStatistics1.getSumOfLogs();
      aggregateSummaryStatistics1.getSum();
      aggregateSummaryStatistics1.getSummary();
      // Undeclared exception!
      try { 
        aggregateSummaryStatistics1.createContributingStatistics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn((-3950.90541)).when(summaryStatistics0).getStandardDeviation();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getStandardDeviation();
      // Undeclared exception!
      try { 
        aggregateSummaryStatistics0.createContributingStatistics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn((-155.12524807741616)).when(summaryStatistics0).getGeometricMean();
      doReturn((-155.12524807741616)).when(summaryStatistics0).getMax();
      doReturn((-155.12524807741616), 0.0).when(summaryStatistics0).getMean();
      doReturn((-1823.34585)).when(summaryStatistics0).getMin();
      doReturn(0.0).when(summaryStatistics0).getSecondMoment();
      doReturn(0.0, 0.0).when(summaryStatistics0).getStandardDeviation();
      doReturn(0.0).when(summaryStatistics0).getSumsq();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getStandardDeviation();
      double double0 = aggregateSummaryStatistics0.getSecondMoment();
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getMean();
      double double1 = aggregateSummaryStatistics0.getMean();
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn((-2195.486680760449)).when(summaryStatistics0).getMax();
      doReturn(Double.NaN, 0.0).when(summaryStatistics0).getMean();
      doReturn(Double.NaN, Double.NaN).when(summaryStatistics0).getMin();
      doReturn(2859L).when(summaryStatistics0).getN();
      doReturn((double)2859L).when(summaryStatistics0).getStandardDeviation();
      doReturn(0.0, 0.0, 1.9868161777724352E-8).when(summaryStatistics0).getSum();
      doReturn(0.0, (-2195.486680760449), 0.0).when(summaryStatistics0).getSumOfLogs();
      doReturn(0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getSummary();
      double double0 = aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSum();
      double double1 = aggregateSummaryStatistics0.getMin();
      assertNotEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(254.1315573329667).when(summaryStatistics0).getGeometricMean();
      doReturn(254.1315573329667, 254.1315573329667).when(summaryStatistics0).getMax();
      doReturn(0.0).when(summaryStatistics0).getMean();
      doReturn(254.1315573329667, 0.0).when(summaryStatistics0).getMin();
      doReturn(158L).when(summaryStatistics0).getN();
      doReturn(0.0, 4270.05033024099).when(summaryStatistics0).getSum();
      doReturn(0.0).when(summaryStatistics0).getSumOfLogs();
      doReturn(0.0).when(summaryStatistics0).getSumsq();
      doReturn(254.1315573329667).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSummary();
      // Undeclared exception!
      try { 
        aggregateSummaryStatistics0.createContributingStatistics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics((SummaryStatistics) null);
      aggregateSummaryStatistics0.getSum();
      double double0 = aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSumsq();
      double double1 = aggregateSummaryStatistics0.getSumsq();
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      SummaryStatistics summaryStatistics1 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics1).getGeometricMean();
      doReturn(0.0).when(summaryStatistics1).getMax();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics1);
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getGeometricMean();
      // Undeclared exception!
      try { 
        aggregateSummaryStatistics0.createContributingStatistics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics0).getMin();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      double double0 = aggregateSummaryStatistics0.getMin();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getVariance();
      StatisticalSummaryValues statisticalSummaryValues0 = AggregateSummaryStatistics.aggregate((Collection<? extends StatisticalSummary>) null);
      assertNull(statisticalSummaryValues0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics((SummaryStatistics) null, (SummaryStatistics) null);
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getSumOfLogs();
      SummaryStatistics summaryStatistics0 = aggregateSummaryStatistics0.createContributingStatistics();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.getVariance();
      aggregateSummaryStatistics0.getMin();
      SummaryStatistics summaryStatistics1 = aggregateSummaryStatistics0.createContributingStatistics();
      assertNotSame(summaryStatistics1, summaryStatistics0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics0).getGeometricMean();
      doReturn(0L).when(summaryStatistics0).getN();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getGeometricMean();
      long long0 = aggregateSummaryStatistics0.getN();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(summaryStatistics0).getStandardDeviation();
      doReturn(0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      double double0 = aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getStandardDeviation();
      double double1 = aggregateSummaryStatistics0.getVariance();
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics0).getMax();
      doReturn(0.0, 0.0).when(summaryStatistics0).getMean();
      doReturn(0.0).when(summaryStatistics0).getMin();
      doReturn(0L).when(summaryStatistics0).getN();
      doReturn(0.0).when(summaryStatistics0).getSum();
      doReturn(0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getSummary();
      double double0 = aggregateSummaryStatistics0.getMean();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getMean();
      SummaryStatistics summaryStatistics0 = aggregateSummaryStatistics0.createContributingStatistics();
      assertEquals(Double.NaN, summaryStatistics0.getSecondMoment(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getMin();
      StatisticalSummary statisticalSummary0 = aggregateSummaryStatistics0.getSummary();
      assertEquals(Double.NaN, statisticalSummary0.getVariance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      long long0 = aggregateSummaryStatistics0.getN();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getGeometricMean();
      double double0 = aggregateSummaryStatistics0.getStandardDeviation();
      double double1 = aggregateSummaryStatistics0.getGeometricMean();
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics0).getMax();
      doReturn(0.0).when(summaryStatistics0).getMean();
      doReturn(0.0).when(summaryStatistics0).getMin();
      doReturn(0L).when(summaryStatistics0).getN();
      doReturn(0.0).when(summaryStatistics0).getSum();
      doReturn(0.0).when(summaryStatistics0).getSumOfLogs();
      doReturn(0.0).when(summaryStatistics0).getVariance();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getSumOfLogs();
      // Undeclared exception!
      try { 
        aggregateSummaryStatistics0.createContributingStatistics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getSum();
      SummaryStatistics summaryStatistics0 = aggregateSummaryStatistics0.createContributingStatistics();
      assertEquals(0L, summaryStatistics0.getN());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      double double0 = aggregateSummaryStatistics0.getSumOfLogs();
      assertEquals(0.0, double0, 0.01);
      
      aggregateSummaryStatistics0.getMax();
      aggregateSummaryStatistics0.getMax();
      double double1 = aggregateSummaryStatistics0.getSum();
      aggregateSummaryStatistics0.getSumOfLogs();
      aggregateSummaryStatistics0.getN();
      aggregateSummaryStatistics0.getSecondMoment();
      aggregateSummaryStatistics0.createContributingStatistics();
      aggregateSummaryStatistics0.getMean();
      aggregateSummaryStatistics0.createContributingStatistics();
      aggregateSummaryStatistics0.getMean();
      double double2 = aggregateSummaryStatistics0.getMax();
      assertNotEquals(double2, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getGeometricMean();
      StatisticalSummary statisticalSummary0 = aggregateSummaryStatistics0.getSummary();
      assertEquals(0.0, statisticalSummary0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      AggregateSummaryStatistics aggregateSummaryStatistics0 = null;
      try {
        aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.SummaryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SummaryStatistics summaryStatistics0 = mock(SummaryStatistics.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(summaryStatistics0).getSecondMoment();
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics(summaryStatistics0, summaryStatistics0);
      double double0 = aggregateSummaryStatistics0.getSecondMoment();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      aggregateSummaryStatistics0.getSecondMoment();
      aggregateSummaryStatistics0.getSecondMoment();
      double double0 = aggregateSummaryStatistics0.getVariance();
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics();
      StatisticalSummaryValues statisticalSummaryValues0 = AggregateSummaryStatistics.aggregate((Collection<? extends StatisticalSummary>) null);
      assertNull(statisticalSummaryValues0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AggregateSummaryStatistics aggregateSummaryStatistics0 = new AggregateSummaryStatistics((SummaryStatistics) null);
      aggregateSummaryStatistics0.getMin();
      AggregateSummaryStatistics.aggregate((Collection<? extends StatisticalSummary>) null);
      aggregateSummaryStatistics0.getSumsq();
      aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getMin();
      aggregateSummaryStatistics0.getSummary();
      aggregateSummaryStatistics0.getN();
      double double0 = aggregateSummaryStatistics0.getGeometricMean();
      aggregateSummaryStatistics0.getStandardDeviation();
      aggregateSummaryStatistics0.getMean();
      double double1 = aggregateSummaryStatistics0.getSumOfLogs();
      assertNotEquals(double1, double0, 0.01);
  }
}
