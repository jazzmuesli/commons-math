/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:30:31 GMT 2019
 */

package org.apache.commons.math4.stat.descriptive.moment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.stat.descriptive.moment.SecondMoment;
import org.apache.commons.math4.stat.descriptive.moment.Variance;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Variance_ESTest extends Variance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Variance variance0 = new Variance(false);
      variance0.increment(3382.54811684);
      Variance variance1 = variance0.copy();
      double[] doubleArray0 = new double[6];
      variance1.incMoment = false;
      doubleArray0[0] = 3382.54811684;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 3382.54811684;
      doubleArray0[3] = 3382.54811684;
      variance0.evaluate(doubleArray0, 1, 1);
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = 3382.54811684;
      variance1.evaluate(doubleArray0);
      variance0.isBiasCorrected();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.setBiasCorrected(false);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 1281.545548;
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      variance0.moment = null;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-187.0);
      doubleArray0[4] = 6.283185307179586;
      doubleArray0[5] = (-2414.768583);
      doubleArray0[6] = 604.4053734;
      doubleArray0[7] = 6.283185307179586;
      doubleArray0[8] = 252.3385573;
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 927.1951953;
      doubleArray0[1] = 878.972;
      SecondMoment secondMoment1 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      variance0.moment = null;
      doubleArray0[2] = Double.NaN;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = -0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 2761.21;
      variance0.evaluate(doubleArray0, 2077.213765129, 1, 1);
      int int0 = 1427;
      try { 
        variance0.evaluate(doubleArray0, (double) 1, 137, 1427);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2544.203224811069;
      doubleArray0[1] = 2544.203224811069;
      variance0.evaluate(doubleArray0);
      variance0.evaluate(doubleArray0, doubleArray0, 0.0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2544.203224811069;
      doubleArray0[1] = 5.97170451872967;
      variance0.incrementAll(doubleArray0);
      variance0.getResult();
      variance0.evaluate(doubleArray0, doubleArray0, 3221309.6253027795);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(true, (SecondMoment) null);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1274.1196976649642;
      variance0.evaluate(doubleArray0, doubleArray0);
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = Double.NaN;
      variance0.incMoment = false;
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (-2044.7933), 741, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = null;
      int int0 = 66;
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null, 66, 66);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = null;
      int int0 = 2144;
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      variance0.moment = null;
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, Double.NaN, 2144, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Variance variance0 = new Variance();
      Variance variance1 = new Variance(variance0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      variance0.increment(0.0);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 624.3799523614;
      variance1.evaluate(doubleArray0, doubleArray0, 0.0);
      variance1.getResult();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      // Undeclared exception!
      try { 
        variance0.getResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(false, (SecondMoment) null);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2419.8799;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 1331.0;
      variance0.evaluate(doubleArray0, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = true;
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(true, (SecondMoment) null);
      double[] doubleArray0 = null;
      int int0 = (-1997);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null, 0.0, (-1997), (-1997));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      variance0.setBiasCorrected(true);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 2588.862629;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 1335.4758140332258;
      doubleArray0[4] = 4593.21398412;
      doubleArray0[5] = 1301.61837893;
      doubleArray0[6] = (-1.0);
      doubleArray0[7] = (-691.86279961393);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = Double.NaN;
      doubleArray1[1] = (-3761.453366);
      doubleArray1[2] = 2588.862629;
      doubleArray1[3] = (-313.55724);
      doubleArray1[4] = 1.0;
      doubleArray1[5] = 2588.862629;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = 4593.21398412;
      doubleArray1[8] = 1335.4758140332258;
      try { 
        variance0.evaluate(doubleArray1, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 8 != 9
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[3];
      variance0.incMoment = true;
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 1931.81277721;
      doubleArray0[2] = (-1.0);
      int int0 = 0;
      int int1 = 0;
      variance0.evaluate(doubleArray0, 1931.81277721, 0, 0);
      boolean boolean0 = false;
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      variance0.moment = null;
      // Undeclared exception!
      try { 
        variance0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Variance variance0 = new Variance(true);
      Variance variance1 = new Variance(variance0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2135.285);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 1434.61236;
      variance1.incrementAll(doubleArray0);
      variance1.equals(variance0);
      variance1.isBiasCorrected();
      int int0 = (-2080);
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, (-2080), (-2080));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[0];
      variance0.clear();
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1.0;
      doubleArray1[1] = 1052.07912;
      doubleArray1[2] = (-875.505491154199);
      doubleArray1[3] = 1792.4544;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 2622.725;
      doubleArray1[6] = (-1.0);
      try { 
        variance0.evaluate(doubleArray0, doubleArray1, 147, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 7 != 0
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      variance0.evaluate(doubleArray0, 0.0, 0, 0);
      variance0.setBiasCorrected(true);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.0;
      variance0.evaluate(doubleArray1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.setBiasCorrected(true);
      boolean boolean0 = false;
      try { 
        Variance.copy((Variance) null, (Variance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(false, (SecondMoment) null);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 4634.1647625014075;
      doubleArray0[1] = (-756.977182180534);
      doubleArray0[2] = 366.264761945;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = Double.NaN;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 1733.906;
      doubleArray0[7] = 1.0;
      try { 
        variance0.evaluate(doubleArray0, (-845), 1804);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // start position (-845)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.getResult();
      variance0.clear();
      variance0.increment(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.increment((-2026.96083));
      variance0.getResult();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Variance variance0 = new Variance(true);
      variance0.copy();
      double[] doubleArray0 = null;
      double double0 = (-1437.691330128775);
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null, (-1437.691330128775));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      double double0 = 0.0;
      doubleArray0[3] = 0.0;
      int int0 = 1514;
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, 0.0, 300, 1514);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 300
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-2018.1);
      doubleArray0[1] = 1806.0;
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 1395.5924844736462;
      doubleArray0[5] = 1.0;
      doubleArray0[6] = (-1212.3233294);
      try { 
        variance0.evaluate(doubleArray0, 0.0, 5329, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      // Undeclared exception!
      try { 
        variance0.getN();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[1];
      variance0.evaluate(doubleArray0);
      doubleArray0[0] = 0.0;
      try { 
        variance0.evaluate(doubleArray0, 3954.3792, (-1), 1074);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // start position (-1)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[6];
      double double0 = (-2679.79693073325);
      doubleArray0[0] = (-2679.79693073325);
      double double1 = (-5285.6119516);
      variance0.incrementAll(doubleArray0);
      doubleArray0[1] = (-5285.6119516);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-4080.997487);
      doubleArray0[4] = (-811.4939289731153);
      double double2 = 0.0;
      doubleArray0[5] = 0.0;
      int int0 = 44;
      try { 
        variance0.evaluate(doubleArray0, 44, 44);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = false;
      Variance variance0 = new Variance(false);
      Variance.copy(variance0, variance0);
      variance0.increment((-2148.140313367));
      double[] doubleArray0 = new double[3];
      Variance.copy(variance0, variance0);
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-2148.140313367);
      doubleArray0[2] = (-2148.140313367);
      variance0.evaluate(doubleArray0, 0, 0);
      variance0.evaluate(doubleArray0, 0.0);
      double[] doubleArray1 = new double[0];
      variance0.setBiasCorrected(true);
      int int0 = (-3058);
      int int1 = 0;
      int int2 = 3989;
      variance0.setBiasCorrected(false);
      try { 
        variance0.evaluate(doubleArray1, 1813, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.clear();
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[0];
      int int0 = 3211;
      variance0.evaluate(doubleArray0);
      int int1 = 3203;
      try { 
        variance0.incrementAll(doubleArray1, 3211, 3203);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1.0);
      variance0.evaluate(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 938.7934;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1697.1393075823914);
      variance0.evaluate(doubleArray0);
      variance0.setBiasCorrected(false);
      Variance variance1 = new Variance(variance0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(false, (SecondMoment) null);
      double[] doubleArray0 = null;
      double double0 = (-2056.93403264);
      int int0 = 2790;
      int int1 = 1422;
      variance0.clear();
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1771.39919794546;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-714.7);
      doubleArray0[3] = (-1.0);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (-1.0);
      try { 
        variance0.evaluate(doubleArray0, doubleArray1, 0.0, (-4650), 4435);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 2 != 6
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-280.02);
      doubleArray0[2] = (-3117.647);
      doubleArray0[3] = 1.0;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (-280.02);
      doubleArray1[1] = 1.0;
      doubleArray1[2] = (-280.02);
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      try { 
        variance0.evaluate(doubleArray0, doubleArray1, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 5 != 4
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-952.81057);
      doubleArray0[1] = (-1.0);
      variance0.evaluate(doubleArray0);
      doubleArray0[2] = (-2305.876015475345);
      doubleArray0[3] = 0.0;
      variance0.moment = null;
      doubleArray0[4] = Double.NaN;
      variance0.clear();
      doubleArray0[5] = 1.0;
      doubleArray0[6] = (-839.8522344619612);
      doubleArray0[7] = Double.NaN;
      int int0 = 3471;
      // Undeclared exception!
      try { 
        Variance.copy(variance0, variance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Variance variance0 = new Variance();
      Variance variance1 = variance0.copy();
      variance1.setBiasCorrected(true);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Variance variance0 = null;
      try {
        variance0 = new Variance((Variance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(true, (SecondMoment) null);
      double[] doubleArray0 = new double[3];
      variance0.increment(72.19839993);
      variance0.equals("");
      doubleArray0[0] = 1.0;
      variance0.setBiasCorrected(true);
      double double0 = 3998.5458639249186;
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, 266, 374);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 266
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(true, (SecondMoment) null);
      double[] doubleArray0 = new double[3];
      variance0.setBiasCorrected(false);
      doubleArray0[0] = 491.05425855;
      doubleArray0[1] = 0.0;
      double double0 = 544.64023;
      doubleArray0[2] = 544.64023;
      // Undeclared exception!
      try { 
        variance0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-2827.58);
      double double0 = 3095.179283;
      // Undeclared exception!
      try { 
        Variance.copy(variance0, variance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Variance variance0 = new Variance(false);
      Variance variance1 = variance0.copy();
      double[] doubleArray0 = new double[6];
      variance1.increment((-887.881));
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      Variance variance2 = variance0.copy();
      doubleArray0[2] = 45.19874114;
      try { 
        variance2.evaluate(doubleArray0, doubleArray0, 45.19874114, (-950), (-2418));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1296.207352209;
      doubleArray0[1] = 1680.9528070008462;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-950.938);
      variance0.incrementAll(doubleArray0);
      // Undeclared exception!
      try { 
        variance0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 2061.4769999;
      doubleArray0[1] = (-2123.921107);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (-1479.03788904);
      doubleArray0[5] = 579.90815756985;
      variance0.evaluate(doubleArray0, (-2123.921107));
      variance0.clear();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = true;
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[4];
      double double0 = 1.0;
      doubleArray0[0] = 1.0;
      doubleArray0[1] = (-818.3296167030699);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1630.958681);
      variance0.evaluate(doubleArray0);
      double[] doubleArray1 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(true, (SecondMoment) null);
      Variance variance1 = null;
      try {
        variance1 = new Variance(variance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      variance0.equals("k6(");
      try { 
        variance0.evaluate(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Variance variance0 = new Variance(true, (SecondMoment) null);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-4279.2029403);
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = Double.NaN;
      try { 
        variance0.evaluate(doubleArray0, (-1), (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // start position (-1)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-634.21695594986);
      doubleArray0[3] = 1953.335593996;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-1026.9);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = (-477.3);
      doubleArray0[8] = 0.0;
      try { 
        variance0.evaluate(doubleArray0, doubleArray0, 1, (-226));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // weigth array must contain at least one non-zero value
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = true;
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[1];
      double double0 = (-1.0);
      doubleArray0[0] = (-1.0);
      variance0.evaluate(doubleArray0, (-1.0));
      Variance variance1 = new Variance(variance0);
      double double1 = (-1321.148643910684);
      try { 
        variance1.evaluate(doubleArray0, doubleArray0, (-1321.148643910684));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // element 0 is negative: -1
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 2544.203224811069;
      doubleArray0[1] = 1877.11;
      variance0.evaluate(doubleArray0);
      variance0.evaluate(doubleArray0, doubleArray0, 222506.6852944158);
      double double0 = variance0.evaluate(doubleArray0, doubleArray0);
      assertEquals(108745.2394361593, double0, 0.01);
      
      double double1 = variance0.evaluate(doubleArray0);
      assertEquals(222506.6852944158, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Variance variance0 = new Variance(true);
      double[] doubleArray0 = new double[1];
      variance0.clear();
      doubleArray0[0] = (-1.0);
      variance0.evaluate(doubleArray0, 931.89914035765);
      variance0.getN();
      variance0.setBiasCorrected(true);
      variance0.isBiasCorrected();
      try { 
        variance0.evaluate(doubleArray0, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // element 0 is negative: -1
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Variance variance0 = new Variance();
      Variance variance1 = new Variance(variance0);
      variance1.clear();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      SecondMoment secondMoment1 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      variance0.moment = null;
      Variance variance1 = null;
      try {
        variance1 = new Variance(variance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Variance variance0 = new Variance();
      double[] doubleArray0 = new double[2];
      variance0.setBiasCorrected(true);
      doubleArray0[0] = 2544.203224811069;
      doubleArray0[1] = 5.97170451872967;
      variance0.incrementAll(doubleArray0);
      variance0.getResult();
      variance0.clear();
      variance0.evaluate(doubleArray0, doubleArray0, 3221309.6253027795);
      variance0.evaluate(doubleArray0, 858.6);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance(true, (SecondMoment) null);
      double[] doubleArray0 = new double[7];
      double double0 = 1274.1196976649642;
      doubleArray0[0] = 1274.1196976649642;
      variance0.evaluate(doubleArray0, doubleArray0);
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = Double.NaN;
      double double1 = (-2044.7933);
      variance0.incMoment = false;
      // Undeclared exception!
      try { 
        variance0.evaluate((double[]) null, (-2044.7933), 741, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Variance variance0 = new Variance(false);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-751.301103126075);
      doubleArray0[1] = (-3825.862330558811);
      doubleArray0[2] = 1.0;
      doubleArray0[3] = 4398.4;
      doubleArray0[4] = 600.19911613676;
      doubleArray0[5] = 0.0;
      variance0.incrementAll(doubleArray0);
      variance0.getN();
      Variance variance1 = variance0.copy();
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (-751.301103126075);
      doubleArray1[1] = 4398.4;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      try { 
        variance1.evaluate(doubleArray1, doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 6 != 4
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Variance variance0 = new Variance();
      variance0.clear();
      variance0.getResult();
      Variance variance1 = variance0.copy();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) (-849);
      doubleArray0[1] = 1.0;
      doubleArray0[2] = (double) 36;
      doubleArray0[3] = (double) (-849);
      doubleArray0[4] = 2932.1;
      doubleArray0[5] = (double) (-849);
      variance1.evaluate(doubleArray0);
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        variance0.evaluate(doubleArray1, doubleArray1, (-388), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -388
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      variance0.evaluate(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Variance variance0 = new Variance(false);
      variance0.increment(3382.54811684);
      Variance variance1 = variance0.copy();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 3382.54811684;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 3382.54811684;
      doubleArray0[3] = 3382.54811684;
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = 3382.54811684;
      variance1.evaluate(doubleArray0);
      variance0.isBiasCorrected();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SecondMoment secondMoment0 = mock(SecondMoment.class, new ViolatedAssumptionAnswer());
      Variance variance0 = new Variance((SecondMoment) null);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      try { 
        variance0.evaluate(doubleArray1, 3904, 3904);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }
}
