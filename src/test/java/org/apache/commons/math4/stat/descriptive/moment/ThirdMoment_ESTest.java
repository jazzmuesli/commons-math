/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:00:04 GMT 2019
 */

package org.apache.commons.math4.stat.descriptive.moment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.stat.descriptive.moment.ThirdMoment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ThirdMoment_ESTest extends ThirdMoment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      assertEquals(Double.NaN, thirdMoment0.getResult(), 0.01);
      
      thirdMoment0.increment((-707.79379869));
      double double0 = thirdMoment0.getResult();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      ThirdMoment thirdMoment1 = new ThirdMoment(thirdMoment0);
      thirdMoment1.m3 = 1301.970085995991;
      double double0 = thirdMoment1.getResult();
      assertEquals(1301.970085995991, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      thirdMoment0.m3 = (-2624.98);
      double double0 = thirdMoment0.getResult();
      assertEquals((-2624.98), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      thirdMoment0.increment(0.0);
      thirdMoment0.copy();
      assertEquals(0.0, thirdMoment0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      assertEquals(Double.NaN, thirdMoment0.getResult(), 0.01);
      
      thirdMoment0.m3 = (-2624.98);
      ThirdMoment thirdMoment1 = thirdMoment0.copy();
      assertTrue(thirdMoment1.equals((Object)thirdMoment0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      try { 
        ThirdMoment.copy(thirdMoment0, (ThirdMoment) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      thirdMoment0.increment(2.0);
      thirdMoment0.increment(0.0);
      thirdMoment0.increment((-1376.192193152902));
      assertEquals((-5.804557022003456E8), thirdMoment0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      ThirdMoment thirdMoment1 = thirdMoment0.copy();
      assertEquals(Double.NaN, thirdMoment1.getResult(), 0.01);
      assertNotSame(thirdMoment1, thirdMoment0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      thirdMoment0.clear();
      assertEquals(Double.NaN, thirdMoment0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThirdMoment thirdMoment0 = new ThirdMoment();
      ThirdMoment.copy(thirdMoment0, thirdMoment0);
      assertEquals(Double.NaN, thirdMoment0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThirdMoment thirdMoment0 = null;
      try {
        thirdMoment0 = new ThirdMoment((ThirdMoment) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }
}
