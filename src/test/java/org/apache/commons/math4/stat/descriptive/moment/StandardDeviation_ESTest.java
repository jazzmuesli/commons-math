/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:04:44 GMT 2019
 */

package org.apache.commons.math4.stat.descriptive.moment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.stat.descriptive.moment.SecondMoment;
import org.apache.commons.math4.stat.descriptive.moment.StandardDeviation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class StandardDeviation_ESTest extends StandardDeviation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      StandardDeviation standardDeviation1 = new StandardDeviation(standardDeviation0);
      assertTrue(standardDeviation1.equals((Object)standardDeviation0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(false);
      boolean boolean0 = standardDeviation0.isBiasCorrected();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      standardDeviation0.increment((-3517.196823539979));
      double double0 = standardDeviation0.getResult();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(false);
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 3051.997;
      standardDeviation0.incrementAll(doubleArray0);
      double double0 = standardDeviation0.getResult();
      assertEquals(959.1501221604442, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(false);
      long long0 = standardDeviation0.getN();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      standardDeviation0.increment(1.0);
      long long0 = standardDeviation0.getN();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      double[] doubleArray0 = new double[4];
      double double0 = standardDeviation0.evaluate(doubleArray0, 0, 2);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-413.0);
      double double0 = standardDeviation0.evaluate(doubleArray0, 0, 2);
      assertEquals(292.03510063004416, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      double[] doubleArray0 = new double[3];
      double double0 = standardDeviation0.evaluate(doubleArray0, 0.0, 1, 1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      double[] doubleArray0 = new double[3];
      double double0 = standardDeviation0.evaluate(doubleArray0, 5102.98277432184);
      assertEquals(8.631674575031098E-5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 5102.98277432184;
      double double0 = standardDeviation0.evaluate(doubleArray0);
      assertEquals(2946.2084784247377, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(false, (SecondMoment) null);
      // Undeclared exception!
      try { 
        standardDeviation0.getResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      // Undeclared exception!
      try { 
        standardDeviation0.evaluate((double[]) null, (-4106), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      double[] doubleArray0 = new double[7];
      try { 
        standardDeviation0.evaluate(doubleArray0, (-1), (-363));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // start position (-1)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      // Undeclared exception!
      try { 
        standardDeviation0.evaluate((double[]) null, 1295.543243711602, 411, 289);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation((SecondMoment) null);
      double[] doubleArray0 = new double[3];
      try { 
        standardDeviation0.evaluate(doubleArray0, 2089.2043282974, 3946, (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // length (-1)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      // Undeclared exception!
      try { 
        standardDeviation0.evaluate((double[]) null, (-3145.41103635533));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      // Undeclared exception!
      try { 
        standardDeviation0.evaluate((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      try { 
        StandardDeviation.copy((StandardDeviation) null, (StandardDeviation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation((SecondMoment) null);
      // Undeclared exception!
      try { 
        StandardDeviation.copy(standardDeviation0, standardDeviation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StandardDeviation standardDeviation0 = null;
      try {
        standardDeviation0 = new StandardDeviation((StandardDeviation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      StandardDeviation.copy(standardDeviation0, standardDeviation0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      standardDeviation0.setBiasCorrected(true);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      double[] doubleArray0 = new double[5];
      try { 
        standardDeviation0.evaluate(doubleArray0, 0, 1301);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true);
      boolean boolean0 = standardDeviation0.isBiasCorrected();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true, (SecondMoment) null);
      // Undeclared exception!
      try { 
        standardDeviation0.getN();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation((SecondMoment) null);
      // Undeclared exception!
      try { 
        standardDeviation0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      double[] doubleArray0 = new double[7];
      double double0 = standardDeviation0.evaluate(doubleArray0, (double) 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(false);
      double[] doubleArray0 = new double[1];
      try { 
        standardDeviation0.evaluate(doubleArray0, 1.0, 1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      StandardDeviation standardDeviation1 = standardDeviation0.copy();
      assertNotSame(standardDeviation1, standardDeviation0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      double[] doubleArray0 = new double[1];
      double double0 = standardDeviation0.evaluate(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation();
      standardDeviation0.clear();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StandardDeviation standardDeviation0 = new StandardDeviation(true, (SecondMoment) null);
      StandardDeviation standardDeviation1 = null;
      try {
        standardDeviation1 = new StandardDeviation(standardDeviation0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Variance", e);
      }
  }
}
