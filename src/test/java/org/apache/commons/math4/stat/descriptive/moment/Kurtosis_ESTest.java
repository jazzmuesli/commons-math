/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:17:52 GMT 2019
 */

package org.apache.commons.math4.stat.descriptive.moment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.stat.descriptive.moment.FourthMoment;
import org.apache.commons.math4.stat.descriptive.moment.Kurtosis;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Kurtosis_ESTest extends Kurtosis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis((FourthMoment) null);
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 3385.149330389492;
      double double0 = kurtosis0.evaluate(doubleArray0);
      assertEquals(9.000000000000014, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[3];
      kurtosis0.incrementAll(doubleArray0);
      double double0 = kurtosis0.getResult();
      assertEquals(3L, kurtosis0.getN());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 978.6674886;
      doubleArray0[1] = 978.6674886;
      doubleArray0[2] = 978.6674886;
      kurtosis0.incrementAll(doubleArray0);
      double double0 = kurtosis0.getResult();
      assertEquals(9L, kurtosis0.getN());
      assertEquals((-1.7142857142857155), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[7];
      kurtosis0.incrementAll(doubleArray0);
      long long0 = kurtosis0.getN();
      assertEquals(0.0, kurtosis0.getResult(), 0.01);
      assertEquals(7L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      FourthMoment fourthMoment1 = new FourthMoment(fourthMoment0);
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment1);
      fourthMoment1.n = (-403L);
      long long0 = kurtosis0.getN();
      assertEquals((-403L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      kurtosis0.increment(0L);
      double[] doubleArray0 = new double[3];
      kurtosis0.incrementAll(doubleArray0);
      kurtosis0.copy();
      assertEquals(4L, kurtosis0.getN());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1109.030284;
      doubleArray0[1] = 1109.030284;
      kurtosis0.incrementAll(doubleArray0);
      kurtosis0.copy();
      assertEquals((-1.8750000000000009), kurtosis0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      fourthMoment0.n = 1830L;
      Kurtosis kurtosis1 = kurtosis0.copy();
      assertEquals(1830L, kurtosis1.getN());
      assertNotSame(kurtosis1, kurtosis0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      fourthMoment0.n = (-1L);
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      Kurtosis kurtosis1 = kurtosis0.copy();
      assertNotSame(kurtosis1, kurtosis0);
      assertEquals((-1L), kurtosis1.getN());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis((FourthMoment) null);
      // Undeclared exception!
      try { 
        kurtosis0.getResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Kurtosis", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis((FourthMoment) null);
      // Undeclared exception!
      try { 
        kurtosis0.getN();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Kurtosis", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      // Undeclared exception!
      try { 
        kurtosis0.evaluate((double[]) null, (-208), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // input array
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      double[] doubleArray0 = new double[1];
      try { 
        kurtosis0.evaluate(doubleArray0, (-4212), 814);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // start position (-4,212)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[9];
      try { 
        kurtosis0.evaluate(doubleArray0, 801, 801);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // subarray ends after array end
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        Kurtosis.copy((Kurtosis) null, (Kurtosis) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      FourthMoment fourthMoment0 = new FourthMoment();
      kurtosis0.moment = fourthMoment0;
      kurtosis0.moment = null;
      // Undeclared exception!
      try { 
        Kurtosis.copy(kurtosis0, kurtosis0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Kurtosis", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis((FourthMoment) null);
      // Undeclared exception!
      try { 
        kurtosis0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Kurtosis", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      kurtosis0.moment = null;
      // Undeclared exception!
      try { 
        kurtosis0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Kurtosis", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Kurtosis kurtosis0 = null;
      try {
        kurtosis0 = new Kurtosis((Kurtosis) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis((FourthMoment) null);
      Kurtosis kurtosis1 = null;
      try {
        kurtosis1 = new Kurtosis(kurtosis0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.descriptive.moment.Kurtosis", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      double[] doubleArray0 = new double[6];
      double double0 = kurtosis0.evaluate(doubleArray0, 3, 3);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      double[] doubleArray0 = new double[7];
      double double0 = kurtosis0.evaluate(doubleArray0, 1073741824, 1073741824);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      double double0 = kurtosis0.getResult();
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      long long0 = kurtosis0.getN();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      Kurtosis.copy(kurtosis0, kurtosis0);
      assertEquals(Double.NaN, kurtosis0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[1];
      double double0 = kurtosis0.evaluate(doubleArray0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[6];
      double double0 = kurtosis0.evaluate(doubleArray0, 0, 0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      kurtosis0.clear();
      assertEquals(Double.NaN, kurtosis0.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      kurtosis0.clear();
      assertEquals(0L, kurtosis0.getN());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[4];
      doubleArray0[3] = 628.7;
      kurtosis0.incrementAll(doubleArray0);
      double double0 = kurtosis0.getResult();
      assertEquals(4L, kurtosis0.getN());
      assertEquals(4.000000000000002, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      double[] doubleArray0 = new double[4];
      kurtosis0.incrementAll(doubleArray0);
      double double0 = kurtosis0.getResult();
      assertEquals(4L, kurtosis0.getN());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      kurtosis0.increment(Double.NaN);
      assertEquals(0L, kurtosis0.getN());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Kurtosis kurtosis0 = new Kurtosis();
      Kurtosis kurtosis1 = new Kurtosis(kurtosis0);
      kurtosis1.equals(kurtosis0);
      assertEquals(Double.NaN, kurtosis1.getResult(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FourthMoment fourthMoment0 = new FourthMoment();
      Kurtosis kurtosis0 = new Kurtosis(fourthMoment0);
      Kurtosis kurtosis1 = kurtosis0.copy();
      assertNotSame(kurtosis1, kurtosis0);
  }
}
