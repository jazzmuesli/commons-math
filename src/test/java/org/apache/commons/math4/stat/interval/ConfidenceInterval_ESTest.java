/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:27:08 GMT 2019
 */

package org.apache.commons.math4.stat.interval;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.stat.interval.ConfidenceInterval;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConfidenceInterval_ESTest extends ConfidenceInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = null;
      try {
        confidenceInterval0 = new ConfidenceInterval(0.0, 2273.3062091253296, 1.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of bounds confidence level 1, must be between 0 and 1
         //
         verifyException("org.apache.commons.math4.stat.interval.ConfidenceInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = null;
      try {
        confidenceInterval0 = new ConfidenceInterval((-4480.690467759128), (-1074.52), (-1074.52));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of bounds confidence level -1,074.52, must be between 0 and 1
         //
         verifyException("org.apache.commons.math4.stat.interval.ConfidenceInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = null;
      try {
        confidenceInterval0 = new ConfidenceInterval(1738.6965046130724, (-1349.170563551063), 810.1705);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // lower bound (1,738.697) must be strictly less than upper bound (-1,349.171)
         //
         verifyException("org.apache.commons.math4.stat.interval.ConfidenceInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = new ConfidenceInterval((-910.714468864), 0.0, 0.9952325384736559);
      double double0 = confidenceInterval0.getUpperBound();
      assertEquals((-910.714468864), confidenceInterval0.getLowerBound(), 0.01);
      assertEquals(0.9952325384736559, confidenceInterval0.getConfidenceLevel(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = new ConfidenceInterval((-910.714468864), (-165.0), 0.9952325384736559);
      double double0 = confidenceInterval0.getUpperBound();
      assertEquals((-910.714468864), confidenceInterval0.getLowerBound(), 0.01);
      assertEquals(0.9952325384736559, confidenceInterval0.getConfidenceLevel(), 0.01);
      assertEquals((-165.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = new ConfidenceInterval(1796.355802708664, 2273.3062091253296, 0.9952325);
      double double0 = confidenceInterval0.getLowerBound();
      assertEquals(1796.355802708664, double0, 0.01);
      assertEquals(0.9952325, confidenceInterval0.getConfidenceLevel(), 0.01);
      assertEquals(2273.3062091253296, confidenceInterval0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = null;
      try {
        confidenceInterval0 = new ConfidenceInterval((-1023.13118956272), 347.4117646027053, 347.4117646027053);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of bounds confidence level 347.412, must be between 0 and 1
         //
         verifyException("org.apache.commons.math4.stat.interval.ConfidenceInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = null;
      try {
        confidenceInterval0 = new ConfidenceInterval((-757.429525), 1257.4570900744, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of bounds confidence level 0, must be between 0 and 1
         //
         verifyException("org.apache.commons.math4.stat.interval.ConfidenceInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = null;
      try {
        confidenceInterval0 = new ConfidenceInterval(1737.840645119042, 1737.840645119042, 1737.840645119042);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // lower bound (1,737.841) must be strictly less than upper bound (1,737.841)
         //
         verifyException("org.apache.commons.math4.stat.interval.ConfidenceInterval", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = new ConfidenceInterval((-910.714468864), 2273.3062091253296, 0.7280753510317988);
      double double0 = confidenceInterval0.getLowerBound();
      assertEquals(0.7280753510317988, confidenceInterval0.getConfidenceLevel(), 0.01);
      assertEquals((-910.714468864), double0, 0.01);
      assertEquals(2273.3062091253296, confidenceInterval0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = new ConfidenceInterval((-910.714468864), 2273.3062091253296, 0.7280753510317988);
      String string0 = confidenceInterval0.toString();
      assertEquals("[-910.714468864;2273.3062091253296] (confidence level:0.7280753510317988)", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = new ConfidenceInterval((-910.714468864), 2273.3062091253296, 0.7280753510317988);
      double double0 = confidenceInterval0.getUpperBound();
      assertEquals(2273.3062091253296, double0, 0.01);
      assertEquals(0.7280753510317988, confidenceInterval0.getConfidenceLevel(), 0.01);
      assertEquals((-910.714468864), confidenceInterval0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfidenceInterval confidenceInterval0 = new ConfidenceInterval((-910.714468864), 2273.3062091253296, 0.7280753510317988);
      double double0 = confidenceInterval0.getConfidenceLevel();
      assertEquals((-910.714468864), confidenceInterval0.getLowerBound(), 0.01);
      assertEquals(0.7280753510317988, double0, 0.01);
      assertEquals(2273.3062091253296, confidenceInterval0.getUpperBound(), 0.01);
  }
}
