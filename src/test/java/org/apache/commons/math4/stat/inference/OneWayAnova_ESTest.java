/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:57:29 GMT 2019
 */

package org.apache.commons.math4.stat.inference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math4.stat.descriptive.SummaryStatistics;
import org.apache.commons.math4.stat.inference.OneWayAnova;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OneWayAnova_ESTest extends OneWayAnova_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaTest((Collection<double[]>) null, 0.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaTest((Collection<double[]>) null, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of bounds significance level 0, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math4.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaTest((Collection<double[]>) null, 1.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of bounds significance level 1, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math4.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaTest((Collection<double[]>) null, Double.NaN);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaTest((Collection<double[]>) null, (-1829.8220871));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // out of bounds significance level -1,829.822, must be between 0 and 0.5
         //
         verifyException("org.apache.commons.math4.stat.inference.OneWayAnova", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaFValue((Collection<double[]>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaPValue((Collection<SummaryStatistics>) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OneWayAnova oneWayAnova0 = new OneWayAnova();
      try { 
        oneWayAnova0.anovaPValue((Collection<double[]>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }
}
