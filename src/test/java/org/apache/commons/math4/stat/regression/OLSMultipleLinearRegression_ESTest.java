/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:57:49 GMT 2019
 */

package org.apache.commons.math4.stat.regression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OLSMultipleLinearRegression_ESTest extends OLSMultipleLinearRegression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression(0.0);
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.newSampleData(doubleArray0, (-3098), 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 8 != -3,098
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      double[] doubleArray0 = new double[9];
      double[][] doubleArray1 = new double[9][8];
      oLSMultipleLinearRegression0.newSampleData(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      double[][] doubleArray0 = new double[10][8];
      oLSMultipleLinearRegression0.newXSampleData(doubleArray0);
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.estimateRegressionParametersStandardErrors();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // matrix is singular
         //
         verifyException("org.apache.commons.math4.linear.LUDecomposition$Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      oLSMultipleLinearRegression0.newYSampleData(doubleArray0);
      double double0 = oLSMultipleLinearRegression0.calculateTotalSumOfSquares();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.newXSampleData((double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      double[][] doubleArray0 = new double[9][4];
      double[] doubleArray1 = new double[9];
      doubleArray0[1] = doubleArray1;
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.newXSampleData(doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 9 != 4
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression(292.775);
      double[][] doubleArray0 = new double[0][6];
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.newXSampleData(doubleArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no data
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression(1.0);
      double[][] doubleArray0 = new double[7][9];
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.newSampleData((double[]) null, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression(100.0);
      double[] doubleArray0 = new double[5];
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[0] = doubleArray0;
      try { 
        oLSMultipleLinearRegression0.newSampleData(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not enough data (5 rows) for this many predictors (5 predictors)
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.newSampleData((double[]) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.newSampleData(doubleArray0, 0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // sample contains 0 observed points, at least 1 are required
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.calculateHat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression((-1926.7622657));
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.calculateBetaVariance();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression(1708.1062);
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.calculateBeta();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression((-2106.177019759106));
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.calculateAdjustedRSquared();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression(483.1229606366);
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.calculateResidualSumOfSquares();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      oLSMultipleLinearRegression0.setNoIntercept(true);
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.calculateTotalSumOfSquares();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression((-1333.9529212013572));
      double[] doubleArray0 = new double[0];
      double[][] doubleArray1 = new double[3][8];
      try { 
        oLSMultipleLinearRegression0.newSampleData(doubleArray0, doubleArray1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math4.stat.regression.AbstractMultipleLinearRegression", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OLSMultipleLinearRegression oLSMultipleLinearRegression0 = new OLSMultipleLinearRegression();
      // Undeclared exception!
      try { 
        oLSMultipleLinearRegression0.calculateRSquared();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.stat.regression.OLSMultipleLinearRegression", e);
      }
  }
}
