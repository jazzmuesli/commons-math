/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:26:19 GMT 2019
 */

package org.apache.commons.math4.stat.descriptive;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math4.stat.descriptive.StatisticalSummaryValues;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class StatisticalSummaryValues_ESTest extends StatisticalSummaryValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, (-1L), (-1L), (-1L), 0.0);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-1.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1L), statisticalSummaryValues0.getN());
      
      statisticalSummaryValues0.hashCode();
      assertEquals((-1.0), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1L), statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      
      statisticalSummaryValues0.hashCode();
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 0L, 0L, 0.0, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      
      double double0 = statisticalSummaryValues0.getVariance();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      
      double double0 = statisticalSummaryValues0.getVariance();
      assertEquals((-697.4643806142), double0, 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 3093.2108709, 2171L, 126.22502462512239, 3093.2108709, 3093.2108709);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(3093.2108709, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(3093.2108709, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(3093.2108709, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(126.22502462512239, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2171L, statisticalSummaryValues0.getN());
      
      double double0 = statisticalSummaryValues0.getSum();
      assertEquals(3093.2108709, double0, 0.01);
      assertEquals(3093.2108709, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(3093.2108709, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(3093.2108709, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(126.22502462512239, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2171L, statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1296.399965), (-1296.399965), 0L, 0.0, 0.0, (-1296.399965));
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-1296.399965), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1296.399965), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1296.399965), statisticalSummaryValues0.getMean(), 0.01);
      
      double double0 = statisticalSummaryValues0.getSum();
      assertEquals((-1296.399965), double0, 0.01);
      assertEquals((-1296.399965), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1296.399965), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1296.399965), statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1.0), 0.0, 0L, 0L, 0L, 2732.8142056);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(2732.8142056, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      
      double double0 = statisticalSummaryValues0.getStandardDeviation();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(2732.8142056, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), 2152.0280874054, 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(2152.0280874054, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      
      double double0 = statisticalSummaryValues0.getStandardDeviation();
      assertEquals(46.3899567514931, double0, 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(2152.0280874054, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 2007L, 0.0, 2007L, (-1.0));
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-1.0), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(2007L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(2007.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      
      long long0 = statisticalSummaryValues0.getN();
      assertEquals(2007L, long0);
      assertEquals((-1.0), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(2007L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(2007.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(3011.86170768, 1182.8196387587723, (-1559L), 2837.0, (-1559L), 0.0);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-1559L), statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1559.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(1182.8196387587723, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(2837.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(3011.86170768, statisticalSummaryValues0.getMean(), 0.01);
      
      long long0 = statisticalSummaryValues0.getN();
      assertEquals((-1559L), long0);
      assertEquals((-1559L), statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-1559.0), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(1182.8196387587723, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(2837.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(3011.86170768, statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, (-706.62752842275), 0L, 0L, 99.640838, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-706.62752842275), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(99.640838, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMin();
      assertEquals(99.640838, double0, 0.01);
      assertEquals((-706.62752842275), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(99.640838, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1731.9641000488093), (-1731.9641000488093), 2562L, 2562L, (-1731.9641000488093), 0.0);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-1731.9641000488093), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(2562.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2562L, statisticalSummaryValues0.getN());
      assertEquals((-1731.9641000488093), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1731.9641000488093), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMin();
      assertEquals((-1731.9641000488093), double0, 0.01);
      assertEquals((-1731.9641000488093), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(2562.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(2562L, statisticalSummaryValues0.getN());
      assertEquals((-1731.9641000488093), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1731.9641000488093), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, (-659.939189421099), 0L, 160.3, 0.0, 0.0);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(160.3, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-659.939189421099), statisticalSummaryValues0.getVariance(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMean();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(160.3, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-659.939189421099), statisticalSummaryValues0.getVariance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(3132.8673842015764, 3132.8673842015764, 318L, 0.0, 0.0, 318L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(318L, statisticalSummaryValues0.getN());
      assertEquals(3132.8673842015764, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(318.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(3132.8673842015764, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMean();
      assertEquals(3132.8673842015764, double0, 0.01);
      assertEquals(318L, statisticalSummaryValues0.getN());
      assertEquals(3132.8673842015764, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(318.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(3132.8673842015764, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 803L, 803L, 0.0, 0.0);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(803L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(803.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMax();
      assertEquals(803.0, double0, 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(803L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(803.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-99.4114535776), (-99.4114535776), (-9223372036854775808L), (-99.4114535776), (-99.4114535776), (-9223372036854775808L));
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-99.4114535776), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-99.4114535776), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-99.4114535776), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-9223372036854775808L), statisticalSummaryValues0.getN());
      assertEquals((-99.4114535776), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-9.223372036854776E18), statisticalSummaryValues0.getSum(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMax();
      assertEquals((-99.4114535776), double0, 0.01);
      assertEquals((-99.4114535776), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-99.4114535776), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-99.4114535776), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-9223372036854775808L), statisticalSummaryValues0.getN());
      assertEquals((-99.4114535776), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-9.223372036854776E18), statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMin();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      
      double double0 = statisticalSummaryValues0.getSum();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1910.4408), 3302.0, 0L, 0.0, (-511.6341991933102), (-1910.4408));
      assertNotNull(statisticalSummaryValues0);
      assertEquals(3302.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-511.6341991933102), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      
      double double0 = statisticalSummaryValues0.getVariance();
      assertEquals(3302.0, double0, 0.01);
      assertEquals(3302.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-511.6341991933102), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1910.4408), 3302.0, 0L, 0.0, (-511.6341991933102), (-1910.4408));
      assertNotNull(statisticalSummaryValues0);
      assertEquals(3302.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals((-1910.4408), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-511.6341991933102), statisticalSummaryValues0.getMin(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMax();
      assertEquals(0.0, double0, 0.01);
      assertEquals(3302.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals((-1910.4408), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-511.6341991933102), statisticalSummaryValues0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      
      long long0 = statisticalSummaryValues0.getN();
      assertEquals(0L, long0);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      
      double double0 = statisticalSummaryValues0.getMean();
      assertEquals((-697.4643806142), double0, 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 0L, 0.0, 0.0, 0.0);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, Double.NaN, 0L, 0.0, 0.0, 0.0);
      assertFalse(statisticalSummaryValues1.equals((Object)statisticalSummaryValues0));
      assertNotNull(statisticalSummaryValues1);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(Double.NaN, statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(0L, statisticalSummaryValues1.getN());
      assertEquals(0.0, statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertNotSame(statisticalSummaryValues0, statisticalSummaryValues1);
      assertNotSame(statisticalSummaryValues1, statisticalSummaryValues0);
      assertFalse(statisticalSummaryValues0.equals((Object)statisticalSummaryValues1));
      assertFalse(statisticalSummaryValues1.equals((Object)statisticalSummaryValues0));
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(Double.NaN, statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(0L, statisticalSummaryValues1.getN());
      assertEquals(0.0, statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0L, 0L);
      assertNotNull(statisticalSummaryValues0);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues((-697.4643806142), (-697.4643806142), 0L, (-697.4643806142), 0.0, (-697.4643806142));
      assertFalse(statisticalSummaryValues1.equals((Object)statisticalSummaryValues0));
      assertNotNull(statisticalSummaryValues1);
      assertEquals((-697.4643806142), statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues1.getMean(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0L, statisticalSummaryValues1.getN());
      assertEquals((-697.4643806142), statisticalSummaryValues1.getMax(), 0.01);
      
      boolean boolean0 = statisticalSummaryValues1.equals(statisticalSummaryValues0);
      assertNotSame(statisticalSummaryValues0, statisticalSummaryValues1);
      assertNotSame(statisticalSummaryValues1, statisticalSummaryValues0);
      assertFalse(statisticalSummaryValues0.equals((Object)statisticalSummaryValues1));
      assertFalse(statisticalSummaryValues1.equals((Object)statisticalSummaryValues0));
      assertFalse(boolean0);
      assertEquals(0L, statisticalSummaryValues0.getN());
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues1.getMean(), 0.01);
      assertEquals((-697.4643806142), statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0L, statisticalSummaryValues1.getN());
      assertEquals((-697.4643806142), statisticalSummaryValues1.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0L, (-2080.0), 0L, 0.0, 0.0, (-1910.4408));
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 1.0, (-472L), 0.0, 0.0, 3772.6425385);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals(3772.6425385, statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      assertEquals((-472L), statisticalSummaryValues1.getN());
      assertEquals(1.0, statisticalSummaryValues1.getVariance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 2007L, 0.0, 2007L, (-1.0));
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 2007L, 1L, 0.0, 1L, 301.4141391);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals(301.4141391, statisticalSummaryValues1.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(1.0, statisticalSummaryValues1.getMin(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      assertEquals(1L, statisticalSummaryValues1.getN());
      assertEquals(2007.0, statisticalSummaryValues1.getVariance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 0L, 0.0, 0.0, 0.0);
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 0L, 0L, 0.0, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals(0.0, statisticalSummaryValues1.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals(0.0, statisticalSummaryValues1.getMax(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, statisticalSummaryValues1.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 2007L, 0.0, 2007L, (-1.0));
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 301.4141391, 2734L, 3184.7086226553533, (-281.875361), (-1.0));
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertEquals(2734L, statisticalSummaryValues1.getN());
      assertEquals(301.4141391, statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals(3184.7086226553533, statisticalSummaryValues1.getMax(), 0.01);
      assertEquals((-281.875361), statisticalSummaryValues1.getMin(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues1.getMean(), 0.01);
      assertEquals((-1.0), statisticalSummaryValues1.getSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 0L, 0.0, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals("StatisticalSummaryValues:\nn: 0\nmin: 0.0\nmax: 0.0\nmean: 0.0\nstd dev: 0.0\nvariance: 0.0\nsum: 0.0\n");
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues(0.0, 0.0, 0L, 0.0, 0.0, 0.0);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues0);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMin(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMean(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1910.4408), 3302.0, 0L, 0.0, (-511.6341991933102), (-1910.4408));
      StatisticalSummaryValues statisticalSummaryValues1 = new StatisticalSummaryValues(0.0, 3302.0, 0L, 0.0, (-1910.4408), 0L);
      boolean boolean0 = statisticalSummaryValues0.equals(statisticalSummaryValues1);
      assertFalse(boolean0);
      assertEquals((-1910.4408), statisticalSummaryValues1.getMin(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals(3302.0, statisticalSummaryValues1.getVariance(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getSum(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1910.4408), 3302.0, 0L, 0.0, (-511.6341991933102), (-1910.4408));
      String string0 = statisticalSummaryValues0.toString();
      assertEquals("StatisticalSummaryValues:\nn: 0\nmin: -511.6341991933102\nmax: 0.0\nmean: -1910.4408\nstd dev: 57.463031594234565\nvariance: 3302.0\nsum: -1910.4408\n", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StatisticalSummaryValues statisticalSummaryValues0 = new StatisticalSummaryValues((-1910.4408), 3302.0, 0L, 0.0, (-511.6341991933102), (-1910.4408));
      statisticalSummaryValues0.hashCode();
      assertEquals(3302.0, statisticalSummaryValues0.getVariance(), 0.01);
      assertEquals(0.0, statisticalSummaryValues0.getMax(), 0.01);
      assertEquals((-511.6341991933102), statisticalSummaryValues0.getMin(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getMean(), 0.01);
      assertEquals((-1910.4408), statisticalSummaryValues0.getSum(), 0.01);
  }
}
