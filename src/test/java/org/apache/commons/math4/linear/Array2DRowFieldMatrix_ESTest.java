/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:08:28 GMT 2019
 */

package org.apache.commons.math4.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.Field;
import org.apache.commons.math4.analysis.XMinus5Function;
import org.apache.commons.math4.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math4.dfp.Dfp;
import org.apache.commons.math4.dfp.DfpField;
import org.apache.commons.math4.linear.AbstractFieldMatrix;
import org.apache.commons.math4.linear.Array2DRowFieldMatrix;
import org.apache.commons.math4.linear.ArrayFieldVector;
import org.apache.commons.math4.linear.DefaultFieldMatrixChangingVisitor;
import org.apache.commons.math4.linear.DefaultFieldMatrixPreservingVisitor;
import org.apache.commons.math4.linear.FieldMatrixChangingVisitor;
import org.apache.commons.math4.linear.FieldMatrixPreservingVisitor;
import org.apache.commons.math4.util.Decimal64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class Array2DRowFieldMatrix_ESTest extends Array2DRowFieldMatrix_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DerivativeStructure[] derivativeStructureArray0 = new DerivativeStructure[5];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(1, 0, doubleArray0);
      DerivativeStructure derivativeStructure1 = new DerivativeStructure((-2531.8548179357), derivativeStructure0, 1, derivativeStructure0, (-3322.210615521), derivativeStructure0, 1, derivativeStructure0);
      DerivativeStructure derivativeStructure2 = derivativeStructure1.scalb(0);
      DerivativeStructure derivativeStructure3 = derivativeStructure2.log1p();
      DerivativeStructure derivativeStructure4 = derivativeStructure3.sinh();
      DerivativeStructure derivativeStructure5 = derivativeStructure4.subtract(derivativeStructure1);
      derivativeStructureArray0[0] = derivativeStructure5;
      DerivativeStructure derivativeStructure6 = derivativeStructure3.remainder((-2531.8548179357));
      DerivativeStructure derivativeStructure7 = derivativeStructure6.compose(doubleArray0);
      derivativeStructureArray0[1] = derivativeStructure7;
      DerivativeStructure derivativeStructure8 = derivativeStructure3.cos();
      derivativeStructureArray0[2] = derivativeStructure8;
      DerivativeStructure derivativeStructure9 = derivativeStructure1.multiply(1);
      derivativeStructureArray0[3] = derivativeStructure9;
      DerivativeStructure derivativeStructure10 = derivativeStructure8.linearCombination(1243.3388813717, derivativeStructure3, (-151.58), derivativeStructure9);
      derivativeStructureArray0[4] = derivativeStructure10;
      Field<DerivativeStructure> field0 = AbstractFieldMatrix.extractField(derivativeStructureArray0);
      DerivativeStructure[][] derivativeStructureArray1 = new DerivativeStructure[3][7];
      derivativeStructureArray1[0] = derivativeStructureArray0;
      derivativeStructureArray1[1] = derivativeStructureArray0;
      derivativeStructureArray1[2] = derivativeStructureArray0;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(field0, derivativeStructureArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 2372;
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(2372, 0);
      DerivativeStructure derivativeStructure1 = derivativeStructure0.multiply(0);
      DerivativeStructure derivativeStructure2 = derivativeStructure1.multiply(derivativeStructure0);
      DerivativeStructure derivativeStructure3 = derivativeStructure2.log1p();
      Field<DerivativeStructure> field0 = derivativeStructure3.getField();
      int int1 = 1;
      derivativeStructure0.scalb(1);
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(field0, (DerivativeStructure[][]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DerivativeStructure[] derivativeStructureArray0 = new DerivativeStructure[0];
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(derivativeStructureArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // matrix must have at least one row
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((Field<DerivativeStructure>) null);
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[4][7];
      DerivativeStructure[] derivativeStructureArray1 = new DerivativeStructure[7];
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(43, 0);
      DerivativeStructure derivativeStructure1 = new DerivativeStructure(1753.49753039418, derivativeStructure0, 0.0, derivativeStructure0, 0, derivativeStructure0, (-1823.6783573231), derivativeStructure0);
      DerivativeStructure derivativeStructure2 = derivativeStructure1.asin();
      DerivativeStructure derivativeStructure3 = derivativeStructure2.cos();
      DerivativeStructure derivativeStructure4 = derivativeStructure3.copySign((-1562.46587617));
      DerivativeStructure derivativeStructure5 = derivativeStructure4.sin();
      DerivativeStructure derivativeStructure6 = derivativeStructure5.multiply(2352);
      derivativeStructureArray1[0] = derivativeStructure6;
      DerivativeStructure derivativeStructure7 = new DerivativeStructure(43, derivativeStructure5, (-1823.6783573231), derivativeStructure5, 43, derivativeStructure6, (-589.812082407914), derivativeStructure2);
      derivativeStructureArray1[1] = derivativeStructure7;
      DerivativeStructure derivativeStructure8 = derivativeStructure6.sqrt();
      DerivativeStructure derivativeStructure9 = derivativeStructure4.linearCombination(derivativeStructure0, derivativeStructure2, derivativeStructure5, derivativeStructure2, derivativeStructure5, derivativeStructure8, derivativeStructure1, derivativeStructure7);
      derivativeStructureArray1[2] = derivativeStructure9;
      int int0 = (-1);
      DerivativeStructure derivativeStructure10 = derivativeStructure7.multiply((-1));
      derivativeStructureArray1[3] = derivativeStructure10;
      DerivativeStructure derivativeStructure11 = derivativeStructure3.log10();
      DerivativeStructure derivativeStructure12 = derivativeStructure3.linearCombination(derivativeStructure0, derivativeStructure9, derivativeStructure10, derivativeStructure10, derivativeStructure6, derivativeStructure11);
      derivativeStructureArray1[4] = derivativeStructure12;
      DerivativeStructure derivativeStructure13 = derivativeStructure0.log1p();
      derivativeStructureArray1[5] = derivativeStructure13;
      DerivativeStructure derivativeStructure14 = derivativeStructure2.signum();
      derivativeStructureArray1[6] = derivativeStructure14;
      derivativeStructureArray0[0] = derivativeStructureArray1;
      DerivativeStructure[] derivativeStructureArray2 = new DerivativeStructure[6];
      DerivativeStructure derivativeStructure15 = new DerivativeStructure(2352, derivativeStructure12, (-2.0), derivativeStructure3, 0.0, derivativeStructure7, (-589.812082407914), derivativeStructure3);
      derivativeStructureArray2[0] = derivativeStructure15;
      derivativeStructureArray2[1] = derivativeStructure14;
      derivativeStructureArray2[2] = derivativeStructure8;
      derivativeStructureArray2[3] = derivativeStructure4;
      derivativeStructureArray2[4] = derivativeStructure11;
      derivativeStructureArray2[5] = derivativeStructure7;
      derivativeStructureArray0[1] = derivativeStructureArray2;
      DerivativeStructure[] derivativeStructureArray3 = new DerivativeStructure[5];
      derivativeStructureArray3[0] = derivativeStructure14;
      derivativeStructureArray3[1] = derivativeStructure9;
      derivativeStructureArray3[2] = derivativeStructure2;
      DerivativeStructure derivativeStructure16 = derivativeStructure8.expm1();
      DerivativeStructure derivativeStructure17 = derivativeStructure16.log();
      derivativeStructureArray3[3] = derivativeStructure17;
      derivativeStructureArray3[4] = derivativeStructure12;
      derivativeStructureArray0[2] = derivativeStructureArray3;
      DerivativeStructure[] derivativeStructureArray4 = new DerivativeStructure[6];
      derivativeStructureArray4[0] = derivativeStructure1;
      derivativeStructureArray4[1] = derivativeStructure1;
      DerivativeStructure derivativeStructure18 = derivativeStructure7.exp();
      derivativeStructureArray4[2] = derivativeStructure18;
      derivativeStructureArray4[3] = derivativeStructure11;
      derivativeStructureArray4[4] = derivativeStructure14;
      derivativeStructureArray4[5] = derivativeStructure17;
      derivativeStructureArray0[3] = derivativeStructureArray4;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix1 = null;
      try {
        array2DRowFieldMatrix1 = new Array2DRowFieldMatrix<DerivativeStructure>((Field<DerivativeStructure>) null, derivativeStructureArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[0][8];
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((Field<DerivativeStructure>) null, derivativeStructureArray0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // matrix must have at least one row
         //
         verifyException("org.apache.commons.math4.linear.Array2DRowFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[8][4];
      DerivativeStructure[] derivativeStructureArray1 = new DerivativeStructure[1];
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, 0);
      DerivativeStructure derivativeStructure1 = DerivativeStructure.pow(0.0, derivativeStructure0);
      DerivativeStructure derivativeStructure2 = new DerivativeStructure(0.0, derivativeStructure1, 0.0, derivativeStructure0, 0.0, derivativeStructure0);
      DerivativeStructure derivativeStructure3 = derivativeStructure2.multiply(0);
      DerivativeStructure derivativeStructure4 = derivativeStructure3.log1p();
      DerivativeStructure derivativeStructure5 = derivativeStructure4.abs();
      DerivativeStructure derivativeStructure6 = derivativeStructure5.multiply(1887.087);
      DerivativeStructure derivativeStructure7 = derivativeStructure6.log();
      derivativeStructureArray1[0] = derivativeStructure7;
      derivativeStructureArray0[0] = derivativeStructureArray1;
      DerivativeStructure[] derivativeStructureArray2 = new DerivativeStructure[1];
      derivativeStructureArray2[0] = derivativeStructure7;
      derivativeStructureArray0[1] = derivativeStructureArray2;
      DerivativeStructure[] derivativeStructureArray3 = new DerivativeStructure[4];
      derivativeStructureArray3[0] = derivativeStructure3;
      derivativeStructureArray3[1] = derivativeStructure4;
      derivativeStructureArray3[2] = derivativeStructure2;
      derivativeStructureArray3[3] = derivativeStructure7;
      derivativeStructureArray0[2] = derivativeStructureArray3;
      DerivativeStructure[] derivativeStructureArray4 = new DerivativeStructure[2];
      derivativeStructureArray4[0] = derivativeStructure7;
      derivativeStructureArray4[1] = derivativeStructure2;
      derivativeStructureArray0[3] = derivativeStructureArray4;
      DerivativeStructure[] derivativeStructureArray5 = new DerivativeStructure[7];
      derivativeStructureArray5[0] = derivativeStructure5;
      derivativeStructureArray5[1] = derivativeStructure1;
      derivativeStructureArray5[2] = derivativeStructure5;
      derivativeStructureArray5[3] = derivativeStructure0;
      derivativeStructureArray5[4] = derivativeStructure3;
      derivativeStructureArray5[5] = derivativeStructure3;
      derivativeStructureArray5[6] = derivativeStructure3;
      derivativeStructureArray0[4] = derivativeStructureArray5;
      DerivativeStructure[] derivativeStructureArray6 = new DerivativeStructure[9];
      DerivativeStructure derivativeStructure8 = derivativeStructure7.copySign(1014.78183426726);
      derivativeStructureArray6[0] = derivativeStructure8;
      derivativeStructureArray6[1] = derivativeStructure6;
      derivativeStructureArray6[2] = derivativeStructure6;
      DerivativeStructure derivativeStructure9 = derivativeStructure0.add(derivativeStructure3);
      derivativeStructureArray6[3] = derivativeStructure9;
      derivativeStructureArray6[4] = derivativeStructure7;
      derivativeStructureArray6[5] = derivativeStructure1;
      derivativeStructureArray6[6] = derivativeStructure3;
      derivativeStructureArray6[7] = derivativeStructure2;
      derivativeStructureArray6[8] = derivativeStructure0;
      derivativeStructureArray0[5] = derivativeStructureArray6;
      DerivativeStructure[] derivativeStructureArray7 = new DerivativeStructure[9];
      derivativeStructureArray7[0] = derivativeStructure8;
      derivativeStructureArray7[1] = derivativeStructure4;
      derivativeStructureArray7[2] = derivativeStructure4;
      derivativeStructureArray7[3] = derivativeStructure4;
      derivativeStructureArray7[4] = derivativeStructure9;
      derivativeStructureArray7[5] = derivativeStructure5;
      derivativeStructureArray7[6] = derivativeStructure9;
      derivativeStructureArray7[7] = derivativeStructure6;
      DerivativeStructure derivativeStructure10 = new DerivativeStructure(0.0, derivativeStructure1, 0.0, derivativeStructure4);
      derivativeStructureArray7[8] = derivativeStructure10;
      derivativeStructureArray0[6] = derivativeStructureArray7;
      DerivativeStructure[] derivativeStructureArray8 = new DerivativeStructure[0];
      derivativeStructureArray0[7] = derivativeStructureArray8;
      Field<DerivativeStructure> field0 = AbstractFieldMatrix.extractField(derivativeStructureArray0);
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(field0, derivativeStructureArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 1 != 4
         //
         verifyException("org.apache.commons.math4.linear.Array2DRowFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DerivativeStructure[] derivativeStructureArray0 = new DerivativeStructure[2];
      int int0 = 326;
      int int1 = 0;
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(326, 0);
      DerivativeStructure derivativeStructure1 = derivativeStructure0.toDegrees();
      DerivativeStructure derivativeStructure2 = derivativeStructure0.hypot(derivativeStructure1);
      DerivativeStructure derivativeStructure3 = derivativeStructure2.subtract(749.2312265620748);
      derivativeStructureArray0[0] = derivativeStructure3;
      DerivativeStructure derivativeStructure4 = new DerivativeStructure(0, derivativeStructure3, (-359.664025806217), derivativeStructure3);
      derivativeStructureArray0[1] = derivativeStructure4;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(derivativeStructureArray0);
      Decimal64[][] decimal64Array0 = new Decimal64[0][5];
      try { 
        AbstractFieldMatrix.extractField(decimal64Array0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // matrix must have at least one row
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Field<DerivativeStructure> field0 = null;
      int int0 = 78;
      int int1 = 2249;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((Field<DerivativeStructure>) null, 78, 2249);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((DerivativeStructure[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((DerivativeStructure[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[5][6];
      DerivativeStructure[] derivativeStructureArray1 = new DerivativeStructure[5];
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(1, 0, 0, 12.0);
      DerivativeStructure derivativeStructure1 = derivativeStructure0.exp();
      DerivativeStructure derivativeStructure2 = derivativeStructure1.copySign(derivativeStructure0);
      derivativeStructureArray1[0] = derivativeStructure2;
      XMinus5Function xMinus5Function0 = new XMinus5Function();
      DerivativeStructure derivativeStructure3 = xMinus5Function0.value(derivativeStructure1);
      DerivativeStructure derivativeStructure4 = derivativeStructure0.linearCombination(derivativeStructure1, derivativeStructure2, derivativeStructure1, derivativeStructure1, derivativeStructure1, derivativeStructure3, derivativeStructure1, derivativeStructure1);
      derivativeStructureArray1[1] = derivativeStructure4;
      DerivativeStructure derivativeStructure5 = derivativeStructure2.rootN(0);
      derivativeStructureArray1[2] = derivativeStructure5;
      DerivativeStructure derivativeStructure6 = derivativeStructure0.sinh();
      DerivativeStructure derivativeStructure7 = derivativeStructure6.sin();
      derivativeStructureArray1[3] = derivativeStructure7;
      DerivativeStructure derivativeStructure8 = derivativeStructure5.cos();
      DerivativeStructure derivativeStructure9 = derivativeStructure8.multiply(1);
      derivativeStructureArray1[4] = derivativeStructure9;
      derivativeStructureArray0[0] = derivativeStructureArray1;
      DerivativeStructure[] derivativeStructureArray2 = new DerivativeStructure[8];
      derivativeStructureArray2[0] = derivativeStructure3;
      derivativeStructureArray2[1] = derivativeStructure9;
      derivativeStructureArray2[2] = derivativeStructure0;
      derivativeStructureArray2[3] = derivativeStructure6;
      derivativeStructureArray2[4] = derivativeStructure7;
      derivativeStructureArray2[5] = derivativeStructure0;
      derivativeStructureArray2[6] = derivativeStructure8;
      derivativeStructureArray2[7] = derivativeStructure6;
      derivativeStructureArray0[1] = derivativeStructureArray2;
      DerivativeStructure[] derivativeStructureArray3 = new DerivativeStructure[5];
      derivativeStructureArray3[0] = derivativeStructure8;
      derivativeStructureArray3[1] = derivativeStructure4;
      derivativeStructureArray3[2] = derivativeStructure9;
      derivativeStructureArray3[3] = derivativeStructure4;
      derivativeStructureArray3[4] = derivativeStructure2;
      derivativeStructureArray0[2] = derivativeStructureArray3;
      DerivativeStructure[] derivativeStructureArray4 = new DerivativeStructure[9];
      DerivativeStructure derivativeStructure10 = derivativeStructure5.rint();
      derivativeStructureArray4[0] = derivativeStructure10;
      derivativeStructureArray4[1] = derivativeStructure9;
      derivativeStructureArray4[2] = derivativeStructure8;
      derivativeStructureArray4[3] = derivativeStructure3;
      derivativeStructureArray4[4] = derivativeStructure6;
      derivativeStructureArray4[5] = derivativeStructure0;
      derivativeStructureArray4[6] = derivativeStructure5;
      derivativeStructureArray4[7] = derivativeStructure0;
      DerivativeStructure derivativeStructure11 = derivativeStructure5.toRadians();
      derivativeStructureArray4[8] = derivativeStructure11;
      derivativeStructureArray0[3] = derivativeStructureArray4;
      DerivativeStructure[] derivativeStructureArray5 = new DerivativeStructure[0];
      derivativeStructureArray0[4] = derivativeStructureArray5;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(derivativeStructureArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 5 != 8
         //
         verifyException("org.apache.commons.math4.linear.Array2DRowFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((DerivativeStructure[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[0][3];
      boolean boolean0 = false;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(derivativeStructureArray0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // matrix must have at least one row
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[0][9];
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(derivativeStructureArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // matrix must have at least one row
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[1][9];
      DerivativeStructure[] derivativeStructureArray1 = new DerivativeStructure[8];
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(0, 0, 0);
      derivativeStructureArray1[0] = derivativeStructure0;
      DerivativeStructure derivativeStructure1 = new DerivativeStructure(0, 0);
      derivativeStructureArray1[1] = derivativeStructure1;
      DerivativeStructure derivativeStructure2 = derivativeStructure0.scalb(1250);
      derivativeStructureArray1[2] = derivativeStructure2;
      DerivativeStructure derivativeStructure3 = derivativeStructure2.acosh();
      derivativeStructureArray1[3] = derivativeStructure3;
      DerivativeStructure derivativeStructure4 = derivativeStructure0.expm1();
      derivativeStructureArray1[4] = derivativeStructure4;
      DerivativeStructure derivativeStructure5 = derivativeStructure1.negate();
      derivativeStructureArray1[5] = derivativeStructure5;
      DerivativeStructure derivativeStructure6 = derivativeStructure4.abs();
      derivativeStructureArray1[6] = derivativeStructure6;
      DerivativeStructure derivativeStructure7 = derivativeStructure0.rint();
      derivativeStructureArray1[7] = derivativeStructure7;
      derivativeStructureArray0[0] = derivativeStructureArray1;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(derivativeStructureArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Dfp[] dfpArray0 = new Dfp[1];
      Dfp dfp0 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn((DfpField) null).when(dfp0).getField();
      dfpArray0[0] = dfp0;
      AbstractFieldMatrix.extractField(dfpArray0);
      Array2DRowFieldMatrix<Dfp> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<Dfp>((Field<Dfp>) null, 222, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // dimension (0)
         //
         verifyException("org.apache.commons.math4.linear.AbstractFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Dfp[][] dfpArray0 = new Dfp[7][3];
      Dfp[] dfpArray1 = new Dfp[2];
      Dfp dfp0 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn((DfpField) null).when(dfp0).getField();
      dfpArray1[0] = dfp0;
      dfpArray1[1] = dfp0;
      dfpArray0[0] = dfpArray1;
      Dfp[] dfpArray2 = new Dfp[0];
      dfpArray0[1] = dfpArray2;
      Dfp[] dfpArray3 = new Dfp[0];
      dfpArray0[2] = dfpArray3;
      Dfp[] dfpArray4 = new Dfp[0];
      dfpArray0[3] = dfpArray4;
      Dfp[] dfpArray5 = new Dfp[1];
      dfpArray5[0] = dfp0;
      dfpArray0[4] = dfpArray5;
      Dfp[] dfpArray6 = new Dfp[8];
      dfpArray6[0] = dfp0;
      dfpArray6[1] = dfp0;
      dfpArray6[2] = dfp0;
      dfpArray6[3] = dfp0;
      dfpArray6[4] = dfp0;
      dfpArray6[5] = dfp0;
      dfpArray6[6] = dfp0;
      dfpArray6[7] = dfp0;
      dfpArray0[5] = dfpArray6;
      Dfp[] dfpArray7 = new Dfp[6];
      dfpArray7[0] = dfp0;
      dfpArray7[1] = dfp0;
      dfpArray7[2] = dfp0;
      dfpArray7[3] = dfp0;
      dfpArray7[4] = dfp0;
      dfpArray7[5] = dfp0;
      dfpArray0[6] = dfpArray7;
      Array2DRowFieldMatrix<Dfp> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<Dfp>(dfpArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 4468;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((Field<DerivativeStructure>) null, 4468, 4468);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[2][3];
      DerivativeStructure[] derivativeStructureArray1 = new DerivativeStructure[6];
      int int0 = 0;
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(2355, 0, 0, 2355);
      DerivativeStructure derivativeStructure1 = DerivativeStructure.hypot(derivativeStructure0, derivativeStructure0);
      DerivativeStructure derivativeStructure2 = derivativeStructure1.linearCombination((double) 0, derivativeStructure0, (-2253.212113), derivativeStructure0, 1.0, derivativeStructure0);
      DerivativeStructure derivativeStructure3 = derivativeStructure2.acosh();
      DerivativeStructure derivativeStructure4 = derivativeStructure3.pow(0.0);
      DerivativeStructure derivativeStructure5 = derivativeStructure4.log10();
      DerivativeStructure derivativeStructure6 = derivativeStructure5.rootN(0);
      derivativeStructureArray1[0] = derivativeStructure6;
      DerivativeStructure derivativeStructure7 = derivativeStructure5.cos();
      derivativeStructureArray1[1] = derivativeStructure7;
      DerivativeStructure derivativeStructure8 = derivativeStructure6.negate();
      derivativeStructureArray1[2] = derivativeStructure8;
      DerivativeStructure derivativeStructure9 = derivativeStructure8.copySign((-2253.212113));
      derivativeStructureArray1[3] = derivativeStructure9;
      DerivativeStructure derivativeStructure10 = derivativeStructure3.toRadians();
      derivativeStructureArray1[4] = derivativeStructure10;
      DerivativeStructure derivativeStructure11 = derivativeStructure5.expm1();
      derivativeStructureArray1[5] = derivativeStructure11;
      derivativeStructureArray0[0] = derivativeStructureArray1;
      DerivativeStructure[] derivativeStructureArray2 = new DerivativeStructure[5];
      derivativeStructureArray2[0] = derivativeStructure9;
      derivativeStructureArray2[1] = derivativeStructure9;
      derivativeStructureArray2[2] = derivativeStructure5;
      derivativeStructureArray2[3] = derivativeStructure10;
      derivativeStructureArray2[4] = derivativeStructure9;
      derivativeStructureArray0[1] = derivativeStructureArray2;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>(derivativeStructureArray0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 6 != 5
         //
         verifyException("org.apache.commons.math4.linear.Array2DRowFieldMatrix", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DerivativeStructure[] derivativeStructureArray0 = new DerivativeStructure[7];
      double double0 = (-940.6879732);
      int int0 = 0;
      int int1 = 1019;
      int int2 = 1024;
      DerivativeStructure derivativeStructure0 = null;
      try {
        derivativeStructure0 = new DerivativeStructure(0, 1019, 1024, 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 1,024 is larger than, or equal to, the maximum (0)
         //
         verifyException("org.apache.commons.math4.analysis.differentiation.DerivativeStructure", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DerivativeStructure[] derivativeStructureArray0 = new DerivativeStructure[9];
      DerivativeStructure derivativeStructure0 = null;
      try {
        derivativeStructure0 = new DerivativeStructure((-214.996433192), (DerivativeStructure) null, (-214.996433192), (DerivativeStructure) null, (-214.996433192), (DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.differentiation.DerivativeStructure", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Field<DerivativeStructure> field0 = null;
      DerivativeStructure[][] derivativeStructureArray0 = new DerivativeStructure[9][8];
      DerivativeStructure[] derivativeStructureArray1 = new DerivativeStructure[8];
      DerivativeStructure derivativeStructure0 = new DerivativeStructure(1, 0, 0, 5082.045702);
      int int0 = 356;
      DerivativeStructure derivativeStructure1 = derivativeStructure0.multiply(356);
      derivativeStructureArray1[0] = derivativeStructure1;
      DerivativeStructure derivativeStructure2 = derivativeStructure0.asin();
      derivativeStructureArray1[1] = derivativeStructure2;
      DerivativeStructure derivativeStructure3 = derivativeStructure2.atan2(derivativeStructure1);
      derivativeStructureArray1[2] = derivativeStructure3;
      DerivativeStructure derivativeStructure4 = derivativeStructure2.asin();
      derivativeStructureArray1[3] = derivativeStructure4;
      DerivativeStructure derivativeStructure5 = derivativeStructure2.divide(185.7444);
      derivativeStructureArray1[4] = derivativeStructure5;
      DerivativeStructure derivativeStructure6 = derivativeStructure5.acosh();
      derivativeStructureArray1[5] = derivativeStructure6;
      DerivativeStructure derivativeStructure7 = derivativeStructure3.add((double) 0);
      derivativeStructureArray1[6] = derivativeStructure7;
      DerivativeStructure derivativeStructure8 = DerivativeStructure.pow((double) 356, derivativeStructure5);
      derivativeStructureArray1[7] = derivativeStructure8;
      derivativeStructureArray0[0] = derivativeStructureArray1;
      DerivativeStructure[] derivativeStructureArray2 = new DerivativeStructure[5];
      derivativeStructureArray2[0] = derivativeStructure8;
      derivativeStructureArray2[1] = derivativeStructure2;
      derivativeStructureArray2[2] = derivativeStructure5;
      derivativeStructureArray2[3] = derivativeStructure0;
      derivativeStructureArray2[4] = derivativeStructure3;
      derivativeStructureArray0[1] = derivativeStructureArray2;
      DerivativeStructure[] derivativeStructureArray3 = new DerivativeStructure[5];
      derivativeStructureArray3[0] = derivativeStructure5;
      derivativeStructureArray3[1] = derivativeStructure0;
      derivativeStructureArray3[2] = derivativeStructure5;
      derivativeStructureArray3[3] = derivativeStructure3;
      DerivativeStructure derivativeStructure9 = derivativeStructure3.sinh();
      derivativeStructureArray3[4] = derivativeStructure9;
      derivativeStructureArray0[2] = derivativeStructureArray3;
      DerivativeStructure[] derivativeStructureArray4 = new DerivativeStructure[5];
      DerivativeStructure derivativeStructure10 = derivativeStructure5.asin();
      derivativeStructureArray4[0] = derivativeStructure10;
      derivativeStructureArray4[1] = derivativeStructure4;
      derivativeStructureArray4[2] = derivativeStructure1;
      derivativeStructureArray4[3] = derivativeStructure4;
      derivativeStructureArray4[4] = derivativeStructure6;
      derivativeStructureArray0[3] = derivativeStructureArray4;
      DerivativeStructure[] derivativeStructureArray5 = new DerivativeStructure[2];
      derivativeStructureArray5[0] = derivativeStructure7;
      derivativeStructureArray5[1] = derivativeStructure6;
      derivativeStructureArray0[4] = derivativeStructureArray5;
      DerivativeStructure[] derivativeStructureArray6 = new DerivativeStructure[0];
      derivativeStructureArray0[5] = derivativeStructureArray6;
      DerivativeStructure[] derivativeStructureArray7 = new DerivativeStructure[9];
      derivativeStructureArray7[0] = derivativeStructure10;
      derivativeStructureArray7[1] = derivativeStructure5;
      derivativeStructureArray7[2] = derivativeStructure1;
      DerivativeStructure derivativeStructure11 = derivativeStructure7.cbrt();
      derivativeStructureArray7[3] = derivativeStructure11;
      derivativeStructureArray7[4] = derivativeStructure1;
      derivativeStructureArray7[5] = derivativeStructure9;
      derivativeStructureArray7[6] = derivativeStructure7;
      derivativeStructureArray7[7] = derivativeStructure7;
      derivativeStructureArray7[8] = derivativeStructure8;
      derivativeStructureArray0[6] = derivativeStructureArray7;
      DerivativeStructure[] derivativeStructureArray8 = new DerivativeStructure[6];
      derivativeStructureArray8[0] = derivativeStructure7;
      derivativeStructureArray8[1] = derivativeStructure10;
      derivativeStructureArray8[2] = derivativeStructure5;
      derivativeStructureArray8[3] = derivativeStructure2;
      DerivativeStructure derivativeStructure12 = derivativeStructure3.multiply(451);
      derivativeStructureArray8[4] = derivativeStructure12;
      derivativeStructureArray8[5] = derivativeStructure11;
      derivativeStructureArray0[7] = derivativeStructureArray8;
      DerivativeStructure[] derivativeStructureArray9 = new DerivativeStructure[4];
      derivativeStructureArray9[0] = derivativeStructure5;
      derivativeStructureArray9[1] = derivativeStructure10;
      derivativeStructureArray9[2] = derivativeStructure8;
      derivativeStructureArray9[3] = derivativeStructure7;
      derivativeStructureArray0[8] = derivativeStructureArray9;
      Array2DRowFieldMatrix<DerivativeStructure> array2DRowFieldMatrix0 = null;
      try {
        array2DRowFieldMatrix0 = new Array2DRowFieldMatrix<DerivativeStructure>((Field<DerivativeStructure>) null, derivativeStructureArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.util.MathArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DerivativeStructure[] derivativeStructureArray0 = new DerivativeStructure[3];
      double double0 = 1818.2045673718;
      DerivativeStructure derivativeStructure0 = null;
      try {
        derivativeStructure0 = new DerivativeStructure(1818.2045673718, (DerivativeStructure) null, 1.0, (DerivativeStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.analysis.differentiation.DerivativeStructure", e);
      }
  }
}
