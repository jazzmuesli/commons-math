/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:02:46 GMT 2019
 */

package org.apache.commons.math4.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.linear.DefaultIterativeLinearSolverEvent;
import org.apache.commons.math4.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IterativeLinearSolverEvent_ESTest extends IterativeLinearSolverEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("", (-4365), realVector0, realVector0, realVector0, 0.0);
      boolean boolean0 = defaultIterativeLinearSolverEvent0.providesResidual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("", 0, realVector0, realVector0, 411.560227);
      boolean boolean0 = defaultIterativeLinearSolverEvent0.providesResidual();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("]Q<", 8, (RealVector) null, (RealVector) null, (RealVector) null, 8);
      RealVector realVector0 = defaultIterativeLinearSolverEvent0.getSolution();
      assertNull(realVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("", 0, realVector0, realVector0, 411.560227);
      RealVector realVector1 = defaultIterativeLinearSolverEvent0.getSolution();
      assertSame(realVector1, realVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("c.<96tsX&&Nb", 1, (RealVector) null, (RealVector) null, 1);
      RealVector realVector0 = defaultIterativeLinearSolverEvent0.getRightHandSideVector();
      assertNull(realVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("[+x\"!%y]cYJs'BaF{", 18, realVector0, realVector0, realVector0, 18);
      RealVector realVector1 = defaultIterativeLinearSolverEvent0.getRightHandSideVector();
      assertSame(realVector1, realVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("[+x\"!%y]cYJs'BaF{", 18, realVector0, realVector0, realVector0, 18);
      RealVector realVector1 = defaultIterativeLinearSolverEvent0.getResidual();
      assertSame(realVector1, realVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("", (-1996), realVector0, realVector0, realVector0, 0.0);
      double double0 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("[+x\"!%y]cYJs'BaF{", 18, realVector0, realVector0, realVector0, 18);
      double double0 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals(18.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent(".P#(]8h}!/s^F:~h#", 0, (RealVector) null, (RealVector) null, (RealVector) null, (-6.0));
      double double0 = defaultIterativeLinearSolverEvent0.getNormOfResidual();
      assertEquals((-6.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RealVector realVector0 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      RealVector realVector1 = mock(RealVector.class, new ViolatedAssumptionAnswer());
      DefaultIterativeLinearSolverEvent defaultIterativeLinearSolverEvent0 = new DefaultIterativeLinearSolverEvent("org.apache.commons.math4.linear.IterativeLinearSolverEvent", 0, realVector0, realVector1, (-191.266778));
      // Undeclared exception!
      try { 
        defaultIterativeLinearSolverEvent0.getResidual();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("org.apache.commons.math4.linear.DefaultIterativeLinearSolverEvent", e);
      }
  }
}
