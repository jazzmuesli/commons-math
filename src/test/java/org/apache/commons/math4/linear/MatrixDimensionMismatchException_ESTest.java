/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:30:36 GMT 2019
 */

package org.apache.commons.math4.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.math4.linear.MatrixDimensionMismatchException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class MatrixDimensionMismatchException_ESTest extends MatrixDimensionMismatchException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 0, 1, 0);
      int int0 = matrixDimensionMismatchException0.getWrongRowDimension();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(2, 2, 2, 2);
      int int0 = matrixDimensionMismatchException0.getWrongRowDimension();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 0, 186, 186);
      int int0 = matrixDimensionMismatchException0.getWrongColumnDimension();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(203, 1446, 1446, 0);
      int int0 = matrixDimensionMismatchException0.getWrongColumnDimension();
      assertEquals(1446, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 0, 0, 0);
      int int0 = matrixDimensionMismatchException0.getExpectedRowDimension();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(1, (-3308), (-3308), (-3308));
      int int0 = matrixDimensionMismatchException0.getExpectedRowDimension();
      assertEquals((-3308), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 0, 0, 0);
      int int0 = matrixDimensionMismatchException0.getExpectedColumnDimension();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(1, 1, 0, 1);
      int int0 = matrixDimensionMismatchException0.getExpectedColumnDimension();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException((-3830), (-2151), (-2151), (-11));
      int int0 = matrixDimensionMismatchException0.getWrongColumnDimension();
      assertEquals((-2151), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(0, 0, (-1128), (-3612));
      int int0 = matrixDimensionMismatchException0.getExpectedColumnDimension();
      assertEquals((-3612), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException(2705, 2705, 287, (-2166));
      int int0 = matrixDimensionMismatchException0.getExpectedRowDimension();
      assertEquals(287, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MatrixDimensionMismatchException matrixDimensionMismatchException0 = new MatrixDimensionMismatchException((-3830), (-2151), (-2151), (-11));
      int int0 = matrixDimensionMismatchException0.getWrongRowDimension();
      assertEquals((-3830), int0);
  }
}
