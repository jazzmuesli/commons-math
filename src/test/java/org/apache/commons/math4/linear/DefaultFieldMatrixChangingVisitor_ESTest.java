/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:55:22 GMT 2019
 */

package org.apache.commons.math4.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.math4.dfp.Dfp;
import org.apache.commons.math4.linear.DefaultFieldMatrixChangingVisitor;
import org.apache.commons.math4.util.Decimal64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class DefaultFieldMatrixChangingVisitor_ESTest extends DefaultFieldMatrixChangingVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Dfp dfp0 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      DefaultFieldMatrixChangingVisitor<Dfp> defaultFieldMatrixChangingVisitor0 = new DefaultFieldMatrixChangingVisitor<Dfp>(dfp0);
      Dfp dfp1 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dfp1).toString();
      Dfp dfp2 = defaultFieldMatrixChangingVisitor0.visit((byte)3, 0, dfp1);
      assertEquals((byte)3, Dfp.QNAN);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultFieldMatrixChangingVisitor<Decimal64> defaultFieldMatrixChangingVisitor0 = new DefaultFieldMatrixChangingVisitor<Decimal64>((Decimal64) null);
      Decimal64 decimal64_0 = defaultFieldMatrixChangingVisitor0.end();
      assertNull(decimal64_0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultFieldMatrixChangingVisitor<Decimal64> defaultFieldMatrixChangingVisitor0 = new DefaultFieldMatrixChangingVisitor<Decimal64>((Decimal64) null);
      Decimal64 decimal64_0 = defaultFieldMatrixChangingVisitor0.visit(0, 0, (Decimal64) null);
      assertNull(decimal64_0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Dfp dfp0 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dfp0).toString();
      DefaultFieldMatrixChangingVisitor<Dfp> defaultFieldMatrixChangingVisitor0 = new DefaultFieldMatrixChangingVisitor<Dfp>(dfp0);
      Dfp dfp1 = defaultFieldMatrixChangingVisitor0.end();
      assertEquals(0, dfp1.log10K());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Dfp dfp0 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      DefaultFieldMatrixChangingVisitor<Dfp> defaultFieldMatrixChangingVisitor0 = new DefaultFieldMatrixChangingVisitor<Dfp>(dfp0);
      defaultFieldMatrixChangingVisitor0.start((byte)0, Integer.MAX_VALUE, 2253, 2253, 2253, 10000);
  }
}
