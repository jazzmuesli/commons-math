/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:04:53 GMT 2019
 */

package org.apache.commons.math4.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.linear.ConjugateGradient;
import org.apache.commons.math4.linear.PreconditionedIterativeLinearSolver;
import org.apache.commons.math4.linear.RealLinearOperator;
import org.apache.commons.math4.linear.RealVector;
import org.apache.commons.math4.linear.SymmLQ;
import org.apache.commons.math4.util.IterationManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class PreconditionedIterativeLinearSolver_ESTest extends PreconditionedIterativeLinearSolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConjugateGradient conjugateGradient0 = new ConjugateGradient(1998, (-196.183383), false);
      RealLinearOperator realLinearOperator0 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      RealLinearOperator realLinearOperator1 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(realLinearOperator1).getColumnDimension();
      try { 
        conjugateGradient0.solve(realLinearOperator1, realLinearOperator0, (RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SymmLQ symmLQ0 = new SymmLQ(0, (-550.5), false);
      RealLinearOperator realLinearOperator0 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      try { 
        symmLQ0.solveInPlace(realLinearOperator0, realLinearOperator0, (RealVector) null, (RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConjugateGradient conjugateGradient0 = new ConjugateGradient((-257), (-2232.39140866212), false);
      RealLinearOperator realLinearOperator0 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(realLinearOperator0).getColumnDimension();
      try { 
        conjugateGradient0.solve(realLinearOperator0, (RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SymmLQ symmLQ0 = new SymmLQ((-1), (-1), false);
      RealLinearOperator realLinearOperator0 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(realLinearOperator0).getColumnDimension();
      // Undeclared exception!
      try { 
        symmLQ0.solve(realLinearOperator0, realLinearOperator0, (RealVector) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.linear.ArrayRealVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      try { 
        PreconditionedIterativeLinearSolver.checkParameters((RealLinearOperator) null, (RealLinearOperator) null, (RealVector) null, (RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IterationManager iterationManager0 = mock(IterationManager.class, new ViolatedAssumptionAnswer());
      ConjugateGradient conjugateGradient0 = new ConjugateGradient(iterationManager0, (-85.5964328619884), false);
      try { 
        conjugateGradient0.solveInPlace((RealLinearOperator) null, (RealVector) null, (RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConjugateGradient conjugateGradient0 = new ConjugateGradient(176, 0.0, false);
      RealLinearOperator realLinearOperator0 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      RealLinearOperator realLinearOperator1 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      try { 
        conjugateGradient0.solve(realLinearOperator0, realLinearOperator1, (RealVector) null, (RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConjugateGradient conjugateGradient0 = new ConjugateGradient((-256), (-2232.39140866212), false);
      RealLinearOperator realLinearOperator0 = mock(RealLinearOperator.class, new ViolatedAssumptionAnswer());
      doReturn((-256)).when(realLinearOperator0).getColumnDimension();
      // Undeclared exception!
      try { 
        conjugateGradient0.solve(realLinearOperator0, (RealVector) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.linear.ArrayRealVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IterationManager iterationManager0 = mock(IterationManager.class, new ViolatedAssumptionAnswer());
      ConjugateGradient conjugateGradient0 = new ConjugateGradient(iterationManager0, 18, false);
      try { 
        conjugateGradient0.solve((RealLinearOperator) null, (RealVector) null, (RealVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math4.util.MathUtils", e);
      }
  }
}
