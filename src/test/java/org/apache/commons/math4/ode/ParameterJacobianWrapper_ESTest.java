/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:52:59 GMT 2019
 */

package org.apache.commons.math4.ode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.math4.ode.FirstOrderConverter;
import org.apache.commons.math4.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math4.ode.ParameterConfiguration;
import org.apache.commons.math4.ode.ParameterJacobianWrapper;
import org.apache.commons.math4.ode.ParameterizedODE;
import org.apache.commons.math4.ode.ParameterizedWrapper;
import org.apache.commons.math4.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math4.ode.TestProblem1;
import org.apache.commons.math4.ode.TestProblem2;
import org.apache.commons.math4.ode.TestProblem3;
import org.apache.commons.math4.ode.TestProblem4;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ParameterJacobianWrapper_ESTest extends ParameterJacobianWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TestProblem3 testProblem3_0 = new TestProblem3(1747.02409);
      ParameterizedWrapper parameterizedWrapper0 = new ParameterizedWrapper(testProblem3_0);
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[5];
      ParameterConfiguration parameterConfiguration0 = new ParameterConfiguration("", 1747.02409);
      parameterConfigurationArray0[0] = parameterConfiguration0;
      parameterConfigurationArray0[1] = parameterConfiguration0;
      parameterConfigurationArray0[2] = parameterConfigurationArray0[1];
      parameterConfigurationArray0[3] = parameterConfiguration0;
      parameterConfigurationArray0[4] = parameterConfiguration0;
      ParameterJacobianWrapper parameterJacobianWrapper0 = new ParameterJacobianWrapper(testProblem3_0, parameterizedWrapper0, parameterConfigurationArray0);
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = new double[3];
      // Undeclared exception!
      try { 
        parameterJacobianWrapper0.computeParameterJacobian(649.849843, doubleArray0, doubleArray0, "i-zpR1K|tj>kvI}5:r", doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TestProblem2 testProblem2_0 = new TestProblem2();
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[0];
      ParameterJacobianWrapper parameterJacobianWrapper0 = new ParameterJacobianWrapper(testProblem2_0, (ParameterizedODE) null, parameterConfigurationArray0);
      // Undeclared exception!
      try { 
        parameterJacobianWrapper0.isSupported("org.apache.commons.math4.ode.ParameterJacobianWrapper");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.ParameterJacobianWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TestProblem1 testProblem1_0 = new TestProblem1();
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[0];
      ParameterJacobianWrapper parameterJacobianWrapper0 = new ParameterJacobianWrapper(testProblem1_0, (ParameterizedODE) null, parameterConfigurationArray0);
      // Undeclared exception!
      try { 
        parameterJacobianWrapper0.getParametersNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.ParameterJacobianWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ParameterizedWrapper parameterizedWrapper0 = new ParameterizedWrapper((FirstOrderDifferentialEquations) null);
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[2];
      ParameterConfiguration parameterConfiguration0 = new ParameterConfiguration("", 0.1);
      parameterConfigurationArray0[0] = parameterConfiguration0;
      parameterConfigurationArray0[1] = parameterConfiguration0;
      ParameterJacobianWrapper parameterJacobianWrapper0 = new ParameterJacobianWrapper((FirstOrderDifferentialEquations) null, parameterizedWrapper0, parameterConfigurationArray0);
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        parameterJacobianWrapper0.computeParameterJacobian((-1162.6), doubleArray0, doubleArray0, "", doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.ParameterJacobianWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TestProblem4 testProblem4_0 = new TestProblem4();
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[8];
      ParameterJacobianWrapper parameterJacobianWrapper0 = null;
      try {
        parameterJacobianWrapper0 = new ParameterJacobianWrapper(testProblem4_0, (ParameterizedODE) null, parameterConfigurationArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.ParameterJacobianWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ParameterizedWrapper parameterizedWrapper0 = new ParameterizedWrapper(firstOrderConverter0);
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[2];
      ParameterConfiguration parameterConfiguration0 = new ParameterConfiguration((String) null, 1);
      parameterConfigurationArray0[0] = parameterConfiguration0;
      parameterConfigurationArray0[1] = parameterConfiguration0;
      ParameterJacobianWrapper parameterJacobianWrapper0 = new ParameterJacobianWrapper(firstOrderConverter0, parameterizedWrapper0, parameterConfigurationArray0);
      double[] doubleArray0 = new double[6];
      parameterJacobianWrapper0.computeParameterJacobian((-2320.278), doubleArray0, doubleArray0, "MB209M7S4Uiy{W", doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ParameterizedWrapper parameterizedWrapper0 = new ParameterizedWrapper(firstOrderConverter0);
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[2];
      ParameterConfiguration parameterConfiguration0 = new ParameterConfiguration((String) null, 1);
      parameterConfigurationArray0[0] = parameterConfiguration0;
      parameterConfigurationArray0[1] = parameterConfiguration0;
      ParameterJacobianWrapper parameterJacobianWrapper0 = new ParameterJacobianWrapper(firstOrderConverter0, parameterizedWrapper0, parameterConfigurationArray0);
      boolean boolean0 = parameterJacobianWrapper0.isSupported("MB209M7S4Uiy{W");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ParameterizedWrapper parameterizedWrapper0 = new ParameterizedWrapper((FirstOrderDifferentialEquations) null);
      ParameterConfiguration[] parameterConfigurationArray0 = new ParameterConfiguration[2];
      ParameterConfiguration parameterConfiguration0 = new ParameterConfiguration("", 0.1);
      parameterConfigurationArray0[0] = parameterConfiguration0;
      parameterConfigurationArray0[1] = parameterConfiguration0;
      ParameterJacobianWrapper parameterJacobianWrapper0 = new ParameterJacobianWrapper((FirstOrderDifferentialEquations) null, parameterizedWrapper0, parameterConfigurationArray0);
      Collection<String> collection0 = parameterJacobianWrapper0.getParametersNames();
      assertFalse(collection0.contains(""));
  }
}
