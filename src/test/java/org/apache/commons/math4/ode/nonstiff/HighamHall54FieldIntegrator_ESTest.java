/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 22:22:32 GMT 2019
 */

package org.apache.commons.math4.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.Field;
import org.apache.commons.math4.dfp.Decimal10;
import org.apache.commons.math4.dfp.Dfp;
import org.apache.commons.math4.ode.nonstiff.HighamHall54FieldIntegrator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HighamHall54FieldIntegrator_ESTest extends HighamHall54FieldIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Dfp dfp0 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      Dfp dfp1 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp0).when(dfp1).sqrt();
      Dfp dfp2 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp1).when(dfp2).multiply(any(org.apache.commons.math4.dfp.Dfp.class));
      Dfp dfp3 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp2).when(dfp3).add(anyDouble());
      Dfp dfp4 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      Dfp dfp5 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp4).when(dfp5).add(anyDouble());
      doReturn(dfp4).when(dfp5).negate();
      Class<Decimal10> class0 = Decimal10.class;
      Field<Dfp> field0 = (Field<Dfp>) mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn(dfp5, (Object) null).when(field0).getOne();
      doReturn(class0).when(field0).getRuntimeClass();
      doReturn(dfp3, dfp5, (Object) null).when(field0).getZero();
      double[] doubleArray0 = new double[2];
      HighamHall54FieldIntegrator<Dfp> highamHall54FieldIntegrator0 = null;
      try {
        highamHall54FieldIntegrator0 = new HighamHall54FieldIntegrator<Dfp>(field0, (-30.0), (byte)3, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Dfp dfp0 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      Dfp dfp1 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp0).when(dfp1).sqrt();
      Dfp dfp2 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp1).when(dfp2).multiply(any(org.apache.commons.math4.dfp.Dfp.class));
      Dfp dfp3 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp2).when(dfp3).add(anyDouble());
      Dfp dfp4 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      Dfp dfp5 = mock(Dfp.class, new ViolatedAssumptionAnswer());
      doReturn(dfp4).when(dfp5).add(anyDouble());
      doReturn(dfp4).when(dfp5).negate();
      Class<Dfp> class0 = Dfp.class;
      Field<Dfp> field0 = (Field<Dfp>) mock(Field.class, new ViolatedAssumptionAnswer());
      doReturn(dfp5, (Object) null).when(field0).getOne();
      doReturn(class0).when(field0).getRuntimeClass();
      doReturn(dfp3, dfp5, (Object) null).when(field0).getZero();
      HighamHall54FieldIntegrator<Dfp> highamHall54FieldIntegrator0 = null;
      try {
        highamHall54FieldIntegrator0 = new HighamHall54FieldIntegrator<Dfp>(field0, (-2713.7707152642906), (byte)1, (byte)2, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator", e);
      }
  }
}
