/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 11 21:15:49 GMT 2019
 */

package org.apache.commons.math4.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math4.ode.AbstractIntegrator;
import org.apache.commons.math4.ode.EquationsMapper;
import org.apache.commons.math4.ode.nonstiff.ThreeEighthesStepInterpolator;
import org.apache.commons.math4.ode.sampling.StepInterpolator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true) 
public class ThreeEighthesStepInterpolator_ESTest extends ThreeEighthesStepInterpolator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      double[] doubleArray0 = new double[3];
      threeEighthesStepInterpolator0.previousState = doubleArray0;
      // Undeclared exception!
      try { 
        threeEighthesStepInterpolator0.computeInterpolatedStateAndDerivatives((-572.0791791194), 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.nonstiff.ThreeEighthesStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      threeEighthesStepInterpolator0.setSoftPreviousTime(0.0);
      StepInterpolator stepInterpolator0 = threeEighthesStepInterpolator0.doCopy();
      assertFalse(stepInterpolator0.equals((Object)threeEighthesStepInterpolator0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      threeEighthesStepInterpolator0.setSoftPreviousTime((-1632.2382339));
      StepInterpolator stepInterpolator0 = threeEighthesStepInterpolator0.doCopy();
      assertEquals(Double.NaN, stepInterpolator0.getInterpolatedTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      threeEighthesStepInterpolator0.setInterpolatedTime(0.0);
      StepInterpolator stepInterpolator0 = threeEighthesStepInterpolator0.doCopy();
      assertEquals(Double.NaN, stepInterpolator0.getCurrentTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      threeEighthesStepInterpolator0.storeTime((-3.0));
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator1 = (ThreeEighthesStepInterpolator)threeEighthesStepInterpolator0.doCopy();
      assertEquals((-3.0), threeEighthesStepInterpolator1.getGlobalCurrentTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      threeEighthesStepInterpolator0.setSoftCurrentTime(0.0);
      StepInterpolator stepInterpolator0 = threeEighthesStepInterpolator0.doCopy();
      assertFalse(stepInterpolator0.equals((Object)threeEighthesStepInterpolator0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      double[] doubleArray0 = new double[3];
      double[][] doubleArray1 = new double[6][4];
      EquationsMapper equationsMapper0 = mock(EquationsMapper.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(equationsMapper0).getDimension();
      EquationsMapper[] equationsMapperArray0 = new EquationsMapper[5];
      equationsMapperArray0[0] = equationsMapper0;
      equationsMapperArray0[1] = equationsMapper0;
      equationsMapperArray0[2] = equationsMapper0;
      equationsMapperArray0[3] = equationsMapper0;
      equationsMapperArray0[4] = equationsMapper0;
      threeEighthesStepInterpolator0.reinitialize((AbstractIntegrator) null, doubleArray0, doubleArray1, false, equationsMapper0, equationsMapperArray0);
      // Undeclared exception!
      try { 
        threeEighthesStepInterpolator0.doCopy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.nonstiff.RungeKuttaStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[6][4];
      double[] doubleArray2 = new double[0];
      doubleArray1[0] = doubleArray2;
      EquationsMapper equationsMapper0 = mock(EquationsMapper.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(equationsMapper0).getDimension();
      EquationsMapper[] equationsMapperArray0 = new EquationsMapper[0];
      threeEighthesStepInterpolator0.reinitialize((AbstractIntegrator) null, doubleArray0, doubleArray1, false, equationsMapper0, equationsMapperArray0);
      // Undeclared exception!
      try { 
        threeEighthesStepInterpolator0.computeInterpolatedStateAndDerivatives((-0.1), (-0.1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math4.ode.nonstiff.ThreeEighthesStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = null;
      try {
        threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator((ThreeEighthesStepInterpolator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.sampling.AbstractStepInterpolator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator1 = new ThreeEighthesStepInterpolator(threeEighthesStepInterpolator0);
      assertEquals(Double.NaN, threeEighthesStepInterpolator1.getPreviousTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      double[] doubleArray0 = new double[3];
      double[][] doubleArray1 = new double[6][4];
      EquationsMapper equationsMapper0 = mock(EquationsMapper.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(equationsMapper0).getDimension();
      EquationsMapper[] equationsMapperArray0 = new EquationsMapper[5];
      equationsMapperArray0[0] = equationsMapper0;
      equationsMapperArray0[1] = equationsMapper0;
      equationsMapperArray0[2] = equationsMapper0;
      equationsMapperArray0[3] = equationsMapper0;
      equationsMapperArray0[4] = equationsMapper0;
      threeEighthesStepInterpolator0.reinitialize((AbstractIntegrator) null, doubleArray0, doubleArray1, false, equationsMapper0, equationsMapperArray0);
      threeEighthesStepInterpolator0.computeInterpolatedStateAndDerivatives((-0.020331201708508627), (-0.020331201708508627));
      assertEquals(Double.NaN, threeEighthesStepInterpolator0.getCurrentTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ThreeEighthesStepInterpolator threeEighthesStepInterpolator0 = new ThreeEighthesStepInterpolator();
      double[] doubleArray0 = new double[9];
      threeEighthesStepInterpolator0.previousState = doubleArray0;
      // Undeclared exception!
      try { 
        threeEighthesStepInterpolator0.getInterpolatedSecondaryDerivatives((-114));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math4.ode.nonstiff.ThreeEighthesStepInterpolator", e);
      }
  }
}
